<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[一些算法和题目的精彩讲解]]></title>
      <url>http://gosnail.me/2016/07/15/explanation-some-algorithm/</url>
      <content type="html"><![CDATA[<ul>
<li><a href="https://briangordon.github.io/2014/08/the-skyline-problem.html" target="_blank" rel="external">The skyline problem</a></li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[python中的概念]]></title>
      <url>http://gosnail.me/2016/06/15/python-concept/</url>
      <content type="html"><![CDATA[<h1 id="slice"><a href="#slice" class="headerlink" title="slice"></a>slice</h1><p>在python中，list(“[1,2,3]”)和str(“123”)提供了slice的功能。可以随意取出这些数据结构中的一段数据。</p>
<p>slice的语法为l[start:end:step],其中l表示一个list或者str,<br>start和end表示你要取出的子串的开始下标和截止下标的下一个。step表示取元素的步长,其缺省值为1。。当step&gt;0时，start和end的缺省值分别为0,<br>len(l)。当step &lt; 0时，start的缺省值分别为len(l)-1, end的缺省值不知道是什么，但是它会使得第一个元素也包含在结果列表中。</p>
<p>如</p>
<ul>
<li>l[1:6]表示取下标为1…5的子串</li>
<li>l[1:6:2]表示取下标分别为1,1+2,1+2+2的元素</li>
<li>l[6:1:-2]表示取下标为6, 6-2, 6-2-2的元素</li>
<li>l[::-1]表示原值的逆序</li>
</ul>
<p>可以将slice看做下面的函数,不妨设l为list<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">slice</span><span class="params">(l, start, end, step)</span>:</span></span><br><span class="line">    res = []</span><br><span class="line">    i = start</span><br><span class="line">    <span class="keyword">while</span> i &lt; end:</span><br><span class="line">        res.append(l[i])</span><br><span class="line">        i += step</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure></p>
<h1 id="list-comprehesion"><a href="#list-comprehesion" class="headerlink" title="list comprehesion"></a>list comprehesion</h1><p>list comprehesion通常用来初始化list。它的语法是 <code>[expr for iter_var in iterable]</code>, <code>[expr for iter_var in iterable if cond_expr]</code>。</p>
<p>如<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">l = [i*i for i in range(1,5)] // l = [1,4,9,16], 即1...4中的平方数</span><br><span class="line"></span><br><span class="line">l = [i*i for i in range(1,5) if i%2==0] // l = [4,9], 即1...4中偶数的平方数</span><br></pre></td></tr></table></figure></p>
<p>可以把<code>[expr for iter_var in iterable if cond_expr]</code>看做下面的函数<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">list_comprehesion</span><span class="params">(lambda iter_var:expr, iter_var, iterable, lambda iter_var:cond_expr)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> map(<span class="keyword">lambda</span> iter_var: expr, filter(<span class="keyword">lambda</span> iter_var:cond_expr, iterable))</span><br></pre></td></tr></table></figure></p>
<h1 id="generator"><a href="#generator" class="headerlink" title="generator"></a>generator</h1><h1 id="yield"><a href="#yield" class="headerlink" title="yield"></a>yield</h1><p>详见<a href="http://pyzh.readthedocs.io/en/latest/the-python-yield-keyword-explained.html" target="_blank" rel="external">3.  (译)Python关键字yield的解释(stackoverflow)</a></p>
<h1 id="变长参数-实参或形参前加上-或"><a href="#变长参数-实参或形参前加上-或" class="headerlink" title="变长参数(实参或形参前加上*或**)"></a>变长参数(实参或形参前加上*或**)</h1><p>在函数定义时使用，详见<a href="http://blog.csdn.net/delphiwcdj/article/details/5746560" target="_blank" rel="external">Python在函数中使用<em>和*</em>接收元组和列表</a></p>
<p>在函数调用时使用，详见<a href="http://www.cnblogs.com/frydsh/archive/2012/07/10/2585370.html" target="_blank" rel="external">Python的zip函数</a></p>
<h1 id="decorator"><a href="#decorator" class="headerlink" title="decorator"></a>decorator</h1><p>详见<a href="http://coolshell.cn/articles/11265.html" target="_blank" rel="external">Python修饰器的函数式编程</a></p>
<p>大致是说，代码<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@decorator</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure></p>
<p>会被解释器翻译为<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">func = decorator(func)</span><br></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[我家的菜园（续）]]></title>
      <url>http://gosnail.me/2016/06/13/caiyuan2/</url>
      <content type="html"><![CDATA[<img src="http://o8fn8ge1e.bkt.clouddn.com/static/images/caiyuan11.jpg">
<img src="http://o8fn8ge1e.bkt.clouddn.com/static/images/caiyuan12.jpg">
<img src="http://o8fn8ge1e.bkt.clouddn.com/static/images/caiyuan13.jpg">
<img src="http://o8fn8ge1e.bkt.clouddn.com/static/images/caiyuan14.jpg">
<img src="http://o8fn8ge1e.bkt.clouddn.com/static/images/caiyuan15.jpg">
<img src="http://o8fn8ge1e.bkt.clouddn.com/static/images/caiyuan16.jpg">
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[《新生》读书笔记]]></title>
      <url>http://gosnail.me/2016/06/13/note-reborn/</url>
      <content type="html"><![CDATA[<p><a href="https://www.evernote.com/shard/s389/sh/4cc3ea73-3dcb-47aa-b540-4fce65108299/58292a736013a01a4c887c9dc5e9628c" target="_blank" rel="external">《新生》的笔记（作者: 李笑来）</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[我家的菜园]]></title>
      <url>http://gosnail.me/2016/06/08/caiyuan/</url>
      <content type="html"><![CDATA[<img src="http://o8fn8ge1e.bkt.clouddn.com/static/images/caiyuan1.jpg">
<img src="http://o8fn8ge1e.bkt.clouddn.com/static/images/caiyuan2.jpg">
<img src="http://o8fn8ge1e.bkt.clouddn.com/static/images/caiyuan3.jpg">
<img src="http://o8fn8ge1e.bkt.clouddn.com/static/images/caiyuan4.jpg">
<img src="http://o8fn8ge1e.bkt.clouddn.com/static/images/caiyuan5.jpg">
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[正在看的书籍(更新中)]]></title>
      <url>http://gosnail.me/2016/06/08/book/</url>
      <content type="html"><![CDATA[<h1 id="正在看的书"><a href="#正在看的书" class="headerlink" title="正在看的书"></a>正在看的书</h1><ul>
<li><a href="http://b.xinshengdaxue.com/index.html" target="_blank" rel="external">新生 七年就是一辈子 — 李笑来</a></li>
</ul>
<h1 id="看过的书"><a href="#看过的书" class="headerlink" title="看过的书"></a>看过的书</h1>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[终于学会了自由泳]]></title>
      <url>http://gosnail.me/2016/06/07/swim/</url>
      <content type="html"><![CDATA[<p>今天，终于可以游20米了。换气也相对自然了些。从开始学习到现在，大概游了10次左右吧。每次都会有一些体会。正好可以回顾一下学的过程。</p>
<ul>
<li>打腿<br>从网上找了打腿的陆上动作练习练了一下，去游了两次，基本学会了。</li>
<li>划臂<br>先从单手划臂的动作开始练起，然后慢慢过渡到双臂<br><a href="http://v.youku.com/v_show/id_XMTE3NDMxMzk2.html" target="_blank" rel="external">视频: 9捷泳的划臂动作——台湾版游泳基础教程</a> 这个视频还是挺棒的。</li>
<li>换气<br>先从只打腿，双臂前伸换气开始练起。再练习单臂划水时的换气。</li>
<li>配合<br>练习6次腿，即左臂划水时，右臂向下打腿，右臂亦然。</li>
</ul>
<p>在练习中有以下体会：</p>
<ul>
<li>当手臂划到腰部时，转头换气</li>
<li>换气时，不要抬头，只是转头  </li>
<li>当左臂抬出水面后，右臂开始向后划水</li>
</ul>
<h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p><a href="http://www.topswim.net/thread-38295-1-1.html" target="_blank" rel="external">“转动”的力量</a></p>
<hr>
<p>update:</p>
<p>2016-6-14</p>
<ul>
<li>划臂时，先将水抱到胸前。然后，在腰间开始向后推水，这时，手掌向后</li>
<li>腰部要绷紧。打腿时，从胯部开始发力。转身时，从胯部开始发力</li>
<li>开始推水时，转身，换气</li>
</ul>
<p>2016-6-20 </p>
<ul>
<li>采用两次腿时要注意:<ul>
<li>先打腿，然后再开始划水。</li>
<li>每次打腿过程中，只有打腿的那条腿动，并快速回弹。保持平直。</li>
</ul>
</li>
<li>有点划船的感觉，两条手臂是船桨。在滑桨时，身体保持平直。</li>
</ul>
<p>2016-6-21</p>
<ul>
<li>在转身的同时打腿，由打腿给予转身支撑力</li>
<li>在水下呼气的时候，嘴里类似于发“呜~~“的声音。这样，在呼气的时候会挤压腹部，从而让胸腔排出更多的废气。</li>
</ul>
<p>2016-6-29</p>
<ul>
<li>像一根木头一样在水中翻转</li>
</ul>
<p>2016-6-30</p>
<ul>
<li>身体的旋转，是游泳的节拍器。<ul>
<li>手臂可以完全用力，而让腰带动手臂，完成划水</li>
<li>身体带动手臂运动的感觉，就像是打棒球挥棒的动作。</li>
<li>当要增加游速时，首先要增加的是身体的转动速度</li>
<li>通过身体转动，完全可以在手臂和腿部不怎么用力的情况下，让身体前行。虽然，走得比较慢。</li>
</ul>
</li>
<li>呼吸时，头部几乎不转动，它只是随着身体旋转而将口露在水面。</li>
<li>在开始划臂时，肘部抬高，差不多和肩膀一样高。并且手臂尽量前伸。</li>
<li>腿部打水几乎不用力，只是为了保持身体的平衡。</li>
</ul>
<p>2016-7-3</p>
<ul>
<li>换气时，尽量张大嘴</li>
<li>划臂时，另一只手臂，尽量向前伸</li>
<li>换气时，感觉好像头枕着另一侧的手臂 </li>
<li><a href="http://blog.sina.com.cn/s/blog_4b0f87b601011wdc.html" target="_blank" rel="external">全浸式自由泳教学法的核心理念和几个特点</a><br> 一篇很有意思的文章，他讲全浸式游泳不是一种泳姿，而是一种训练游泳的方法，提倡游泳时的忘我状态。<br>2016-7-4  </li>
<li>两次腿的感觉：<ul>
<li>换气的一侧，打腿、转身和划臂同时进行，以使转身或者更大动力</li>
<li>另一侧，先打腿，再划臂，以使身体前进时腿是直的。</li>
</ul>
</li>
<li>第一次测试了100米，用了4分10秒。 </li>
</ul>
<p>2016-7-12</p>
<ul>
<li>加快速度的办法，不是增加转身的频率，而是增加转身的速度，为了增加转身的速度，你需要增加打腿的力度。</li>
<li>在换气时，向后看。</li>
</ul>
<p>2016-7-25</p>
<ul>
<li>开始抱水时，从身体的中线开始，能明显感觉到手臂受到的阻力</li>
<li>当打完腿后，身体开始旋转时，顺势抱水，能明显感觉到水的阻力，但是手臂借用身体躯干的力量，不会感觉到很累。</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[中国共产党章程(十八大)]]></title>
      <url>http://gosnail.me/2016/06/07/dangzhang/</url>
      <content type="html"><![CDATA[<h1 id="总纲"><a href="#总纲" class="headerlink" title="总纲"></a>总纲</h1><p>　中国共产党是中国工人阶级的先锋队，同时是中国人民和中华民族的先锋队，是中国特色社会主义事业的领导核心，代表中国先进生产力的发展要求，代表中国先进文化的前进方向，代表中国最广大人民的根本利益。党的最高理想和最终目标是实现共产主义。</p>
<p>　　中国共产党以马克思列宁主义、毛泽东思想、邓小平理论、“三个代表”重要思想和科学发展观作为自己的行动指南。</p>
<p>　　马克思列宁主义揭示了人类社会历史发展的规律，它的基本原理是正确的，具有强大的生命力。中国共产党人追求的共产主义最高理想，只有在社会主义社会充分发展和高度发达的基础上才能实现。社会主义制度的发展和完善是一个长期的历史过程。坚持马克思列宁主义的基本原理，走中国人民自愿选择的适合中国国情的道路，中国的社会主义事业必将取得最终的胜利。</p>
<p>　　以毛泽东同志为主要代表的中国共产党人，把马克思列宁主义的基本原理同中国革命的具体实践结合起来，创立了毛泽东思想。毛泽东思想是马克思列宁主义在中国的运用和发展，是被实践证明了的关于中国革命和建设的正确的理论原则和经验总结，是中国共产党集体智慧的结晶。在毛泽东思想指引下，中国共产党领导全国各族人民，经过长期的反对帝国主义、封建主义、官僚资本主义的革命斗争，取得了新民主主义革命的胜利，建立了人民民主专政的中华人民共和国；建国以后，顺利地进行了社会主义改造，完成了从新民主主义到社会主义的过渡，确立了社会主义基本制度，发展了社会主义的经济、政治和文化。</p>
<p>　　十一届三中全会以来，以邓小平同志为主要代表的中国共产党人，总结建国以来正反两方面的经验，解放思想，实事求是，实现全党工作中心向经济建设的转移，实行改革开放，开辟了社会主义事业发展的新时期，逐步形成了建设中国特色社会主义的路线、方针、政策，阐明了在中国建设社会主义、巩固和发展社会主义的基本问题，创立了邓小平理论。邓小平理论是马克思列宁主义的基本原理同当代中国实践和时代特征相结合的产物，是毛泽东思想在新的历史条件下的继承和发展，是马克思主义在中国发展的新阶段，是当代中国的马克思主义，是中国共产党集体智慧的结晶，引导着我国社会主义现代化事业不断前进。</p>
<p>　　十三届四中全会以来，以江泽民同志为主要代表的中国共产党人，在建设中国特色社会主义的实践中，加深了对什么是社会主义、怎样建设社会主义和建设什么样的党、怎样建设党的认识，积累了治党治国新的宝贵经验，形成了“三个代表”重要思想。“三个代表”重要思想是对马克思列宁主义、毛泽东思想、邓小平理论的继承和发展，反映了当代世界和中国的发展变化对党和国家工作的新要求，是加强和改进党的建设、推进我国社会主义自我完善和发展的强大理论武器，是中国共产党集体智慧的结晶，是党必须长期坚持的指导思想。始终做到“三个代表”，是我们党的立党之本、执政之基、力量之源。</p>
<p>　　十六大以来，以胡锦涛同志为主要代表的中国共产党人，坚持以邓小平理论和“三个代表”重要思想为指导，根据新的发展要求，深刻认识和回答了新形势下实现什么样的发展、怎样发展等重大问题，形成了以人为本、全面协调可持续发展的科学发展观。科学发展观，是同马克思列宁主义、毛泽东思想、邓小平理论、“三个代表”重要思想既一脉相承又与时俱进的科学理论，是马克思主义关于发展的世界观和方法论的集中体现，是马克思主义中国化最新成果，是中国共产党集体智慧的结晶，是发展中国特色社会主义必须坚持和贯彻的指导思想。</p>
<p>　　改革开放以来我们取得一切成绩和进步的根本原因，归结起来就是：开辟了中国特色社会主义道路，形成了中国特色社会主义理论体系，确立了中国特色社会主义制度。全党同志要倍加珍惜、长期坚持和不断发展党历经艰辛开创的这条道路、这个理论体系、这个制度，高举中国特色社会主义伟大旗帜，为实现推进现代化建设、完成祖国统一、维护世界和平与促进共同发展这三大历史任务而奋斗。</p>
<p>　　我国正处于并将长期处于社会主义初级阶段。这是在经济文化落后的中国建设社会主义现代化不可逾越的历史阶段，需要上百年的时间。我国的社会主义建设，必须从我国的国情出发，走中国特色社会主义道路。在现阶段，我国社会的主要矛盾是人民日益增长的物质文化需要同落后的社会生产之间的矛盾。由于国内的因素和国际的影响，阶级斗争还在一定范围内长期存在，在某种条件下还有可能激化，但已经不是主要矛盾。我国社会主义建设的根本任务，是进一步解放生产力，发展生产力，逐步实现社会主义现代化，并且为此而改革生产关系和上层建筑中不适应生产力发展的方面和环节。必须坚持和完善公有制为主体、多种所有制经济共同发展的基本经济制度，坚持和完善按劳分配为主体、多种分配方式并存的分配制度，鼓励一部分地区和一部分人先富起来，逐步消灭贫穷，达到共同富裕，在生产发展和社会财富增长的基础上不断满足人民日益增长的物质文化需要，促进人的全面发展。发展是我们党执政兴国的第一要务。各项工作都要把有利于发展社会主义社会的生产力，有利于增强社会主义国家的综合国力，有利于提高人民的生活水平，作为总的出发点和检验标准，尊重劳动、尊重知识、尊重人才、尊重创造，做到发展为了人民、发展依靠人民、发展成果由人民共享。跨入新世纪，我国进入全面建设小康社会、加快推进社会主义现代化的新的发展阶段。必须按照中国特色社会主义事业总体布局，全面推进经济建设、政治建设、文化建设、社会建设、生态文明建设。在新世纪新阶段，经济和社会发展的战略目标是，巩固和发展已经初步达到的小康水平，到建党一百年时，建成惠及十几亿人口的更高水平的小康社会；到建国一百年时，人均国内生产总值达到中等发达国家水平，基本实现现代化。</p>
<p>　　中国共产党在社会主义初级阶段的基本路线是：领导和团结全国各族人民，以经济建设为中心，坚持四项基本原则，坚持改革开放，自力更生，艰苦创业，为把我国建设成为富强民主文明和谐的社会主义现代化国家而奋斗。</p>
<p>　　中国共产党在领导社会主义事业中，必须坚持以经济建设为中心，其他各项工作都服从和服务于这个中心。要抓紧时机，加快发展，实施科教兴国战略、人才强国战略和可持续发展战略，充分发挥科学技术作为第一生产力的作用，依靠科技进步，提高劳动者素质，促进国民经济又好又快发展。</p>
<p>　　坚持社会主义道路、坚持人民民主专政、坚持中国共产党的领导、坚持马克思列宁主义毛泽东思想这四项基本原则，是我们的立国之本。在社会主义现代化建设的整个过程中，必须坚持四项基本原则，反对资产阶级自由化。</p>
<p>　　坚持改革开放，是我们的强国之路。只有改革开放，才能发展中国、发展社会主义、发展马克思主义。要从根本上改革束缚生产力发展的经济体制，坚持和完善社会主义市场经济体制；与此相适应，要进行政治体制改革和其他领域的改革。要坚持对外开放的基本国策，吸收和借鉴人类社会创造的一切文明成果。改革开放应当大胆探索，勇于开拓，提高改革决策的科学性，增强改革措施的协调性，在实践中开创新路。</p>
<p>　　中国共产党领导人民发展社会主义市场经济。毫不动摇地巩固和发展公有制经济，毫不动摇地鼓励、支持、引导非公有制经济发展。发挥市场在资源配置中的基础性作用，建立完善的宏观调控体系。统筹城乡发展、区域发展、经济社会发展、人与自然和谐发展、国内发展和对外开放，调整经济结构，转变经济发展方式。促进工业化、信息化、城镇化、农业现代化同步发展，建设社会主义新农村，走中国特色新型工业化道路，建设创新型国家。</p>
<p>　　中国共产党领导人民发展社会主义民主政治。坚持党的领导、人民当家作主、依法治国有机统一，走中国特色社会主义政治发展道路，扩大社会主义民主，健全社会主义法制，建设社会主义法治国家，巩固人民民主专政，建设社会主义政治文明。坚持和完善人民代表大会制度、中国共产党领导的多党合作和政治协商制度、民族区域自治制度以及基层群众自治制度。发展更加广泛、更加充分、更加健全的人民民主，切实保障人民管理国家事务和社会事务、管理经济和文化事业的权利。尊重和保障人权。广开言路，建立健全民主选举、民主决策、民主管理、民主监督的制度和程序。完善中国特色社会主义法律体系，加强法律实施工作，实现国家各项工作法治化。</p>
<p>　　中国共产党领导人民发展社会主义先进文化。建设社会主义精神文明，实行依法治国和以德治国相结合，提高全民族的思想道德素质和科学文化素质，为改革开放和社会主义现代化建设提供强大的思想保证、精神动力和智力支持，建设社会主义文化强国。加强社会主义核心价值体系建设，坚持马克思主义指导思想，树立中国特色社会主义共同理想，弘扬以爱国主义为核心的民族精神和以改革创新为核心的时代精神，倡导社会主义荣辱观，增强民族自尊、自信和自强精神，抵御资本主义和封建主义腐朽思想的侵蚀，扫除各种社会丑恶现象，努力使我国人民成为有理想、有道德、有文化、有纪律的人民。对党员还要进行共产主义远大理想教育。大力发展教育、科学、文化事业，弘扬民族优秀传统文化，繁荣和发展社会主义文化。</p>
<p>　　中国共产党领导人民构建社会主义和谐社会。按照民主法治、公平正义、诚信友爱、充满活力、安定有序、人与自然和谐相处的总要求和共同建设、共同享有的原则，以保障和改善民生为重点，解决好人民最关心、最直接、最现实的利益问题，使发展成果更多更公平惠及全体人民，努力形成全体人民各尽其能、各得其所而又和谐相处的局面。加强和创新社会管理。严格区分和正确处理敌我矛盾和人民内部矛盾这两类不同性质的矛盾。加强社会治安综合治理，依法坚决打击各种危害国家安全和利益、危害社会稳定和经济发展的犯罪活动和犯罪分子，保持社会长期稳定。</p>
<p>　　中国共产党领导人民建设社会主义生态文明。树立尊重自然、顺应自然、保护自然的生态文明理念，坚持节约资源和保护环境的基本国策，坚持节约优先、保护优先、自然恢复为主的方针，坚持生产发展、生活富裕、生态良好的文明发展道路。着力建设资源节约型、环境友好型社会，形成节约资源和保护环境的空间格局、产业结构、生产方式、生活方式，为人民创造良好生产生活环境，实现中华民族永续发展。</p>
<p>　　中国共产党坚持对人民解放军和其他人民武装力量的领导，加强人民解放军的建设，切实保证人民解放军履行新世纪新阶段军队历史使命，充分发挥人民解放军在巩固国防、保卫祖国和参加社会主义现代化建设中的作用。</p>
<p>　　中国共产党维护和发展平等团结互助和谐的社会主义民族关系，积极培养、选拔少数民族干部，帮助少数民族和民族地区发展经济、文化和社会事业，实现各民族共同团结奋斗、共同繁荣发展。全面贯彻党的宗教工作基本方针，团结信教群众为经济社会发展作贡献。</p>
<p>　　中国共产党同全国各民族工人、农民、知识分子团结在一起，同各民主党派、无党派人士、各民族的爱国力量团结在一起，进一步发展和壮大由全体社会主义劳动者、社会主义事业的建设者、拥护社会主义的爱国者、拥护祖国统一的爱国者组成的最广泛的爱国统一战线。不断加强全国人民包括香港特别行政区同胞、澳门特别行政区同胞、台湾同胞和海外侨胞的团结。按照“一个国家、两种制度”的方针，促进香港、澳门长期繁荣稳定，完成祖国统一大业。</p>
<p>　　中国共产党坚持独立自主的和平外交政策，坚持和平发展道路，坚持互利共赢的开放战略，统筹国内国际两个大局，积极发展对外关系，努力为我国的改革开放和现代化建设争取有利的国际环境。在国际事务中，维护我国的独立和主权，反对霸权主义和强权政治，维护世界和平，促进人类进步，努力推动建设持久和平、共同繁荣的和谐世界。在互相尊重主权和领土完整、互不侵犯、互不干涉内政、平等互利、和平共处五项原则的基础上，发展我国同世界各国的关系。不断发展我国同周边国家的睦邻友好关系，加强同发展中国家的团结与合作。按照独立自主、完全平等、互相尊重、互不干涉内部事务的原则，发展我党同各国共产党和其他政党的关系。</p>
<p>　　中国共产党要领导全国各族人民实现社会主义现代化的宏伟目标，必须紧密围绕党的基本路线，加强党的执政能力建设、先进性和纯洁性建设，以改革创新精神全面推进党的建设新的伟大工程，整体推进党的思想建设、组织建设、作风建设、反腐倡廉建设、制度建设，全面提高党的建设科学化水平。坚持立党为公、执政为民，坚持党要管党、从严治党，发扬党的优良传统和作风，不断提高党的领导水平和执政水平，提高拒腐防变和抵御风险的能力，不断增强党的阶级基础和扩大党的群众基础，不断提高党的创造力、凝聚力、战斗力，建设学习型、服务型、创新型的马克思主义执政党，使我们党始终走在时代前列，成为领导全国人民沿着中国特色社会主义道路不断前进的坚强核心。党的建设必须坚决实现以下四项基本要求：</p>
<p>　　第一，坚持党的基本路线。全党要用邓小平理论、“三个代表”重要思想、科学发展观和党的基本路线统一思想，统一行动，并且毫不动摇地长期坚持下去。必须把改革开放同四项基本原则统一起来，全面落实党的基本路线，全面执行党在社会主义初级阶段的基本纲领，反对一切“左”的和右的错误倾向，要警惕右，但主要是防止“左”。加强各级领导班子建设，选拔使用在改革开放和社会主义现代化建设中政绩突出、群众信任的干部，培养和造就千百万社会主义事业接班人，从组织上保证党的基本理论、基本路线、基本纲领、基本经验的贯彻落实。</p>
<p>　　第二，坚持解放思想，实事求是，与时俱进，求真务实。党的思想路线是一切从实际出发，理论联系实际，实事求是，在实践中检验真理和发展真理。全党必须坚持这条思想路线，积极探索，大胆试验，开拓创新，创造性地开展工作，不断研究新情况，总结新经验，解决新问题，在实践中丰富和发展马克思主义，推进马克思主义中国化。</p>
<p>　　第三，坚持全心全意为人民服务。党除了工人阶级和最广大人民群众的利益，没有自己特殊的利益。党在任何时候都把群众利益放在第一位，同群众同甘共苦，保持最密切的联系，坚持权为民所用、情为民所系、利为民所谋，不允许任何党员脱离群众，凌驾于群众之上。党在自己的工作中实行群众路线，一切为了群众，一切依靠群众，从群众中来，到群众中去，把党的正确主张变为群众的自觉行动。我们党的最大政治优势是密切联系群众，党执政后的最大危险是脱离群众。党风问题、党同人民群众联系问题是关系党生死存亡的问题。党坚持标本兼治、综合治理、惩防并举、注重预防的方针，建立健全惩治和预防腐败体系，坚持不懈地反对腐败，加强党风建设和廉政建设。</p>
<p>　　第四，坚持民主集中制。民主集中制是民主基础上的集中和集中指导下的民主相结合。它既是党的根本组织原则，也是群众路线在党的生活中的运用。必须充分发扬党内民主，尊重党员主体地位，保障党员民主权利，发挥各级党组织和广大党员的积极性创造性。必须实行正确的集中，保证全党的团结统一和行动一致，保证党的决定得到迅速有效的贯彻执行。加强组织性纪律性，在党的纪律面前人人平等。加强对党的领导机关和党员领导干部特别是主要领导干部的监督，不断完善党内监督制度。党在自己的政治生活中正确地开展批评和自我批评，在原则问题上进行思想斗争，坚持真理，修正错误。努力造成又有集中又有民主，又有纪律又有自由，又有统一意志又有个人心情舒畅的生动活泼的政治局面。</p>
<p>　　党的领导主要是政治、思想和组织的领导。党要适应改革开放和社会主义现代化建设的要求，坚持科学执政、民主执政、依法执政，加强和改善党的领导。党必须按照总揽全局、协调各方的原则，在同级各种组织中发挥领导核心作用。党必须集中精力领导经济建设，组织、协调各方面的力量，同心协力，围绕经济建设开展工作，促进经济社会全面发展。党必须实行民主的科学的决策，制定和执行正确的路线、方针、政策，做好党的组织工作和宣传教育工作，发挥全体党员的先锋模范作用。党必须在宪法和法律的范围内活动。党必须保证国家的立法、司法、行政机关，经济、文化组织和人民团体积极主动地、独立负责地、协调一致地工作。党必须加强对工会、共产主义青年团、妇女联合会等群众组织的领导，充分发挥它们的作用。党必须适应形势的发展和情况的变化，完善领导体制，改进领导方式，增强执政能力。共产党员必须同党外群众亲密合作，共同为建设中国特色社会主义而奋斗。</p>
<h1 id="第一章-党员"><a href="#第一章-党员" class="headerlink" title="第一章  党员"></a>第一章  党员</h1><p>　　第一条　 年满十八岁的中国工人、农民、军人、知识分子和其他社会阶层的先进分子，承认党的纲领和章程，愿意参加党的一个组织并在其中积极工作、执行党的决议和按期交纳党费的，可以申请加入中国共产党。</p>
<p>　　第二条　 中国共产党党员是中国工人阶级的有共产主义觉悟的先锋战士。</p>
<p>　　中国共产党党员必须全心全意为人民服务，不惜牺牲个人的一切，为实现共产主义奋斗终身。</p>
<p>　　中国共产党党员永远是劳动人民的普通一员。除了法律和政策规定范围内的个人利益和工作职权以外，所有共产党员都不得谋求任何私利和特权。</p>
<p>　　第三条　 党员必须履行下列义务：</p>
<p>　　（一）认真学习马克思列宁主义、毛泽东思想、邓小平理论、“三个代表”重要思想和科学发展观，学习党的路线、方针、政策和决议，学习党的基本知识，学习科学、文化、法律和业务知识，努力提高为人民服务的本领。</p>
<p>　　（二）贯彻执行党的基本路线和各项方针、政策，带头参加改革开放和社会主义现代化建设，带动群众为经济发展和社会进步艰苦奋斗，在生产、工作、学习和社会生活中起先锋模范作用。</p>
<p>　　（三）坚持党和人民的利益高于一切，个人利益服从党和人民的利益，吃苦在前，享受在后，克己奉公，多做贡献。</p>
<p>　　（四）自觉遵守党的纪律，模范遵守国家的法律法规，严格保守党和国家的秘密，执行党的决定，服从组织分配，积极完成党的任务。</p>
<p>　　（五）维护党的团结和统一，对党忠诚老实，言行一致，坚决反对一切派别组织和小集团活动，反对阳奉阴违的两面派行为和一切阴谋诡计。</p>
<p>　　（六）切实开展批评和自我批评，勇于揭露和纠正工作中的缺点、错误，坚决同消极腐败现象作斗争。</p>
<p>　　（七）密切联系群众，向群众宣传党的主张，遇事同群众商量，及时向党反映群众的意见和要求，维护群众的正当利益。</p>
<p>　　（八）发扬社会主义新风尚，带头实践社会主义荣辱观，提倡共产主义道德，为了保护国家和人民的利益，在一切困难和危险的时刻挺身而出，英勇斗争，不怕牺牲。</p>
<p>　　第四条　 党员享有下列权利：</p>
<p>　　（一）参加党的有关会议，阅读党的有关文件，接受党的教育和培训。</p>
<p>　　（二）在党的会议上和党报党刊上，参加关于党的政策问题的讨论。</p>
<p>　　（三）对党的工作提出建议和倡议。</p>
<p>　　（四）在党的会议上有根据地批评党的任何组织和任何党员，向党负责地揭发、检举党的任何组织和任何党员违法乱纪的事实，要求处分违法乱纪的党员，要求罢免或撤换不称职的干部。</p>
<p>　　（五）行使表决权、选举权，有被选举权。</p>
<p>　　（六）在党组织讨论决定对党员的党纪处分或作出鉴定时，本人有权参加和进行申辩，其他党员可以为他作证和辩护。</p>
<p>　　（七）对党的决议和政策如有不同意见，在坚决执行的前提下，可以声明保留，并且可以把自己的意见向党的上级组织直至中央提出。</p>
<p>　　（八）向党的上级组织直至中央提出请求、申诉和控告，并要求有关组织给以负责的答复。</p>
<p>　　党的任何一级组织直至中央都无权剥夺党员的上述权利。</p>
<p>　　第五条　发展党员，必须经过党的支部，坚持个别吸收的原则。</p>
<p>　　申请入党的人，要填写入党志愿书，要有两名正式党员作介绍人，要经过支部大会通过和上级党组织批准，并且经过预备期的考察，才能成为正式党员。</p>
<p>　　介绍人要认真了解申请人的思想、品质、经历和工作表现，向他解释党的纲领和党的章程，说明党员的条件、义务和权利，并向党组织作出负责的报告。</p>
<p>　　党的支部委员会对申请入党的人，要注意征求党内外有关群众的意见，进行严格的审查，认为合格后再提交支部大会讨论。</p>
<p>　　上级党组织在批准申请人入党以前，要派人同他谈话，作进一步的了解，并帮助他提高对党的认识。</p>
<p>　　在特殊情况下，党的中央和省、自治区、直辖市委员会可以直接接收党员。</p>
<p>　　第六条　 预备党员必须面向党旗进行入党宣誓。誓词如下：我志愿加入中国共产党，拥护党的纲领，遵守党的章程，履行党员义务，执行党的决定，严守党的纪律，保守党的秘密，对党忠诚，积极工作，为共产主义奋斗终身，随时准备为党和人民牺牲一切，永不叛党。</p>
<p>　　第七条　 预备党员的预备期为一年。党组织对预备党员应当认真教育和考察。</p>
<p>　　预备党员的义务同正式党员一样。预备党员的权利，除了没有表决权、选举权和被选举权以外，也同正式党员一样。</p>
<p>　　预备党员预备期满，党的支部应当及时讨论他能否转为正式党员。认真履行党员义务，具备党员条件的，应当按期转为正式党员；需要继续考察和教育的，可以延长预备期，但不能超过一年；不履行党员义务，不具备党员条件的，应当取消预备党员资格。预备党员转为正式党员，或延长预备期，或取消预备党员资格，都应当经支部大会讨论通过和上级党组织批准。</p>
<p>　　预备党员的预备期，从支部大会通过他为预备党员之日算起。党员的党龄，从预备期满转为正式党员之日算起。</p>
<p>　　第八条　每个党员，不论职务高低，都必须编入党的一个支部、小组或其他特定组织，参加党的组织生活，接受党内外群众的监督。党员领导干部还必须参加党委、党组的民主生活会。不允许有任何不参加党的组织生活、不接受党内外群众监督的特殊党员。</p>
<p>　　第九条　 党员有退党的自由。党员要求退党，应当经支部大会讨论后宣布除名，并报上级党组织备案。</p>
<p>　　党员缺乏革命意志，不履行党员义务，不符合党员条件，党的支部应当对他进行教育，要求他限期改正；经教育仍无转变的，应当劝他退党。劝党员退党，应当经支部大会讨论决定，并报上级党组织批准。如被劝告退党的党员坚持不退，应当提交支部大会讨论，决定把他除名，并报上级党组织批准。</p>
<p>　　党员如果没有正当理由，连续六个月不参加党的组织生活，或不交纳党费，或不做党所分配的工作，就被认为是自行脱党。支部大会应当决定把这样的党员除名，并报上级党组织批准。</p>
<h1 id="第二章-党的组织制度"><a href="#第二章-党的组织制度" class="headerlink" title="第二章  党的组织制度"></a>第二章  党的组织制度</h1><p>　　第十条　党是根据自己的纲领和章程，按照民主集中制组织起来的统一整体。党的民主集中制的基本原则是：</p>
<p>　　（一）党员个人服从党的组织，少数服从多数，下级组织服从上级组织，全党各个组织和全体党员服从党的全国代表大会和中央委员会。</p>
<p>　　（二）党的各级领导机关，除它们派出的代表机关和在非党组织中的党组外，都由选举产生。</p>
<p>　　（三）党的最高领导机关，是党的全国代表大会和它所产生的中央委员会。党的地方各级领导机关，是党的地方各级代表大会和它们所产生的委员会。党的各级委员会向同级的代表大会负责并报告工作。</p>
<p>　　（四）党的上级组织要经常听取下级组织和党员群众的意见，及时解决他们提出的问题。党的下级组织既要向上级组织请示和报告工作，又要独立负责地解决自己职责范围内的问题。上下级组织之间要互通情报、互相支持和互相监督。党的各级组织要按规定实行党务公开，使党员对党内事务有更多的了解和参与。</p>
<p>　　（五）党的各级委员会实行集体领导和个人分工负责相结合的制度。凡属重大问题都要按照集体领导、民主集中、个别酝酿、会议决定的原则，由党的委员会集体讨论，作出决定；委员会成员要根据集体的决定和分工，切实履行自己的职责。</p>
<p>　　（六）党禁止任何形式的个人崇拜。要保证党的领导人的活动处于党和人民的监督之下，同时维护一切代表党和人民利益的领导人的威信。</p>
<p>　　第十一条　党的各级代表大会的代表和委员会的产生，要体现选举人的意志。选举采用无记名投票的方式。候选人名单要由党组织和选举人充分酝酿讨论。可以直接采用候选人数多于应选人数的差额选举办法进行正式选举。也可以先采用差额选举办法进行预选，产生候选人名单，然后进行正式选举。选举人有了解候选人情况、要求改变候选人、不选任何一个候选人和另选他人的权利。任何组织和个人不得以任何方式强迫选举人选举或不选举某个人。</p>
<p>　　党的地方各级代表大会和基层代表大会的选举，如果发生违反党章的情况，上一级党的委员会在调查核实后，应作出选举无效和采取相应措施的决定，并报再上一级党的委员会审查批准，正式宣布执行。</p>
<p>　　党的各级代表大会代表实行任期制。</p>
<p>　　第十二条　党的中央和地方各级委员会在必要时召集代表会议，讨论和决定需要及时解决的重大问题。代表会议代表的名额和产生办法，由召集代表会议的委员会决定。</p>
<p>　　第十三条　凡是成立党的新组织，或是撤销党的原有组织，必须由上级党组织决定。</p>
<p>　　在党的地方各级代表大会和基层代表大会闭会期间，上级党的组织认为有必要时，可以调动或者指派下级党组织的负责人。</p>
<p>　　党的中央和地方各级委员会可以派出代表机关。</p>
<p>　　党的中央和省、自治区、直辖市委员会实行巡视制度。</p>
<p>　　第十四条　 党的各级领导机关，对同下级组织有关的重要问题作出决定时，在通常情况下，要征求下级组织的意见。要保证下级组织能够正常行使他们的职权。凡属应由下级组织处理的问题，如无特殊情况，上级领导机关不要干预。</p>
<p>　　第十五条　有关全国性的重大政策问题，只有党中央有权作出决定，各部门、各地方的党组织可以向中央提出建议，但不得擅自作出决定和对外发表主张。</p>
<p>　　党的下级组织必须坚决执行上级组织的决定。下级组织如果认为上级组织的决定不符合本地区、本部门的实际情况，可以请求改变；如果上级组织坚持原决定，下级组织必须执行，并不得公开发表不同意见，但有权向再上一级组织报告。</p>
<p>　　党的各级组织的报刊和其他宣传工具，必须宣传党的路线、方针、政策和决议。</p>
<p>　　第十六条　党组织讨论决定问题，必须执行少数服从多数的原则。决定重要问题，要进行表决。对于少数人的不同意见，应当认真考虑。如对重要问题发生争论，双方人数接近，除了在紧急情况下必须按多数意见执行外，应当暂缓作出决定，进一步调查研究，交换意见，下次再表决；在特殊情况下，也可将争论情况向上级组织报告，请求裁决。</p>
<p>　　党员个人代表党组织发表重要主张，如果超出党组织已有决定的范围，必须提交所在的党组织讨论决定，或向上级党组织请示。任何党员不论职务高低，都不能个人决定重大问题；如遇紧急情况，必须由个人作出决定时，事后要迅速向党组织报告。不允许任何领导人实行个人专断和把个人凌驾于组织之上。</p>
<p>　　第十七条　党的中央、地方和基层组织，都必须重视党的建设，经常讨论和检查党的宣传工作、教育工作、组织工作、纪律检查工作、群众工作、统一战线工作等，注意研究党内外的思想政治状况。</p>
<h1 id="第三章-党的中央组织"><a href="#第三章-党的中央组织" class="headerlink" title="第三章　党的中央组织"></a>第三章　党的中央组织</h1><p>　　第十八条　党的全国代表大会每五年举行一次，由中央委员会召集。中央委员会认为有必要，或者有三分之一以上的省一级组织提出要求，全国代表大会可以提前举行；如无非常情况，不得延期举行。</p>
<p>　　全国代表大会代表的名额和选举办法，由中央委员会决定。</p>
<p>　　第十九条　党的全国代表大会的职权是：</p>
<p>　　（一）听取和审查中央委员会的报告；</p>
<p>　　（二）听取和审查中央纪律检查委员会的报告；</p>
<p>　　（三）讨论并决定党的重大问题；</p>
<p>　　（四）修改党的章程；</p>
<p>　　（五）选举中央委员会；</p>
<p>　　（六）选举中央纪律检查委员会。</p>
<p>　　第二十条　党的全国代表会议的职权是：讨论和决定重大问题；调整和增选中央委员会、中央纪律检查委员会的部分成员。调整和增选中央委员及候补中央委员的数额，不得超过党的全国代表大会选出的中央委员及候补中央委员各自总数的五分之一。</p>
<p>　　第二十一条　党的中央委员会每届任期五年。全国代表大会如提前或延期举行，它的任期相应地改变。中央委员会委员和候补委员必须有五年以上的党龄。中央委员会委员和候补委员的名额，由全国代表大会决定。中央委员会委员出缺，由中央委员会候补委员按照得票多少依次递补。</p>
<p>　　中央委员会全体会议由中央政治局召集，每年至少举行一次。中央政治局向中央委员会全体会议报告工作，接受监督。</p>
<p>　　在全国代表大会闭会期间，中央委员会执行全国代表大会的决议，领导党的全部工作，对外代表中国共产党。</p>
<p>　　第二十二条　党的中央政治局、中央政治局常务委员会和中央委员会总书记，由中央委员会全体会议选举。中央委员会总书记必须从中央政治局常务委员会委员中产生。</p>
<p>　　中央政治局和它的常务委员会在中央委员会全体会议闭会期间，行使中央委员会的职权。</p>
<p>　　中央书记处是中央政治局和它的常务委员会的办事机构；成员由中央政治局常务委员会提名，中央委员会全体会议通过。</p>
<p>　　中央委员会总书记负责召集中央政治局会议和中央政治局常务委员会会议，并主持中央书记处的工作。</p>
<p>　　党的中央军事委员会组成人员由中央委员会决定。</p>
<p>　　每届中央委员会产生的中央领导机构和中央领导人，在下届全国代表大会开会期间，继续主持党的经常工作，直到下届中央委员会产生新的中央领导机构和中央领导人为止。</p>
<p>　　第二十三条　中国人民解放军的党组织，根据中央委员会的指示进行工作。中央军事委员会的政治工作机关是中国人民解放军总政治部，总政治部负责管理军队中党的工作和政治工作。军队中党的组织体制和机构，由中央军事委员会作出规定。</p>
<h1 id="第四章-党的地方组织"><a href="#第四章-党的地方组织" class="headerlink" title="第四章　党的地方组织"></a>第四章　党的地方组织</h1><p>　　第二十四条　党的省、自治区、直辖市的代表大会，设区的市和自治州的代表大会，县（旗）、自治县、不设区的市和市辖区的代表大会，每五年举行一次。</p>
<p>　　党的地方各级代表大会由同级党的委员会召集。在特殊情况下，经上一级委员会批准，可以提前或延期举行。</p>
<p>　　党的地方各级代表大会代表的名额和选举办法，由同级党的委员会决定，并报上一级党的委员会批准。</p>
<p>　　第二十五条　党的地方各级代表大会的职权是：</p>
<p>　　（一）听取和审查同级委员会的报告；</p>
<p>　　（二）听取和审查同级纪律检查委员会的报告；</p>
<p>　　（三）讨论本地区范围内的重大问题并作出决议；</p>
<p>　　（四）选举同级党的委员会，选举同级党的纪律检查委员会。</p>
<p>　　第二十六条　党的省、自治区、直辖市、设区的市和自治州的委员会，每届任期五年。这些委员会的委员和候补委员必须有五年以上的党龄。</p>
<p>　　党的县（旗）、自治县、不设区的市和市辖区的委员会，每届任期五年。这些委员会的委员和候补委员必须有三年以上的党龄。</p>
<p>　　党的地方各级代表大会如提前或延期举行，由它选举的委员会的任期相应地改变。</p>
<p>　　党的地方各级委员会的委员和候补委员的名额，分别由上一级委员会决定。党的地方各级委员会委员出缺，由候补委员按照得票多少依次递补。</p>
<p>　　党的地方各级委员会全体会议，每年至少召开两次。</p>
<p>　　党的地方各级委员会在代表大会闭会期间，执行上级党组织的指示和同级党代表大会的决议，领导本地方的工作，定期向上级党的委员会报告工作。</p>
<p>　　第二十七条　党的地方各级委员会全体会议，选举常务委员会和书记、副书记，并报上级党的委员会批准。党的地方各级委员会的常务委员会，在委员会全体会议闭会期间，行使委员会职权；在下届代表大会开会期间，继续主持经常工作，直到新的常务委员会产生为止。</p>
<p>　　党的地方各级委员会的常务委员会定期向委员会全体会议报告工作，接受监督。</p>
<p>　　第二十八条　党的地区委员会和相当于地区委员会的组织，是党的省、自治区委员会在几个县、自治县、市范围内派出的代表机关。它根据省、自治区委员会的授权，领导本地区的工作。</p>
<h1 id="第五章-党的基层组织"><a href="#第五章-党的基层组织" class="headerlink" title="第五章　党的基层组织"></a>第五章　党的基层组织</h1><p>　　第二十九条　企业、农村、机关、学校、科研院所、街道社区、社会组织、人民解放军连队和其他基层单位，凡是有正式党员三人以上的，都应当成立党的基层组织。</p>
<p>　　党的基层组织，根据工作需要和党员人数，经上级党组织批准，分别设立党的基层委员会、总支部委员会、支部委员会。基层委员会由党员大会或代表大会选举产生，总支部委员会和支部委员会由党员大会选举产生，提出委员候选人要广泛征求党员和群众的意见。</p>
<p>　　第三十条　党的基层委员会每届任期三年至五年，总支部委员会、支部委员会每届任期两年或三年。基层委员会、总支部委员会、支部委员会的书记、副书记选举产生后，应报上级党组织批准。</p>
<p>　　第三十一条　党的基层组织是党在社会基层组织中的战斗堡垒，是党的全部工作和战斗力的基础。它的基本任务是：</p>
<p>　　（一）宣传和执行党的路线、方针、政策，宣传和执行党中央、上级组织和本组织的决议，充分发挥党员的先锋模范作用，积极创先争优，团结、组织党内外的干部和群众，努力完成本单位所担负的任务。</p>
<p>　　（二）组织党员认真学习马克思列宁主义、毛泽东思想、邓小平理论、“三个代表”重要思想和科学发展观，学习党的路线、方针、政策和决议，学习党的基本知识，学习科学、文化、法律和业务知识。</p>
<p>　　（三）对党员进行教育、管理、监督和服务，提高党员素质，增强党性，严格党的组织生活，开展批评和自我批评，维护和执行党的纪律，监督党员切实履行义务，保障党员的权利不受侵犯。加强和改进流动党员管理。</p>
<p>　　（四）密切联系群众，经常了解群众对党员、党的工作的批评和意见，维护群众的正当权利和利益，做好群众的思想政治工作。</p>
<p>　　（五）充分发挥党员和群众的积极性创造性，发现、培养和推荐他们中间的优秀人才，鼓励和支持他们在改革开放和社会主义现代化建设中贡献自己的聪明才智。</p>
<p>　　（六）对要求入党的积极分子进行教育和培养，做好经常性的发展党员工作，重视在生产、工作第一线和青年中发展党员。</p>
<p>　　（七）监督党员干部和其他任何工作人员严格遵守国法政纪，严格遵守国家的财政经济法规和人事制度，不得侵占国家、集体和群众的利益。</p>
<p>　　（八）教育党员和群众自觉抵制不良倾向，坚决同各种违法犯罪行为作斗争。</p>
<p>　　第三十二条　街道、乡、镇党的基层委员会和村、社区党组织，领导本地区的工作，支持和保证行政组织、经济组织和群众自治组织充分行使职权。</p>
<p>　　国有企业和集体企业中党的基层组织，发挥政治核心作用，围绕企业生产经营开展工作。保证监督党和国家的方针、政策在本企业的贯彻执行；支持股东会、董事会、监事会和经理（厂长）依法行使职权；全心全意依靠职工群众，支持职工代表大会开展工作；参与企业重大问题的决策；加强党组织的自身建设，领导思想政治工作、精神文明建设和工会、共青团等群众组织。</p>
<p>　　非公有制经济组织中党的基层组织，贯彻党的方针政策，引导和监督企业遵守国家的法律法规，领导工会、共青团等群众组织，团结凝聚职工群众，维护各方的合法权益，促进企业健康发展。</p>
<p>　　实行行政领导人负责制的事业单位中党的基层组织，发挥政治核心作用。实行党委领导下的行政领导人负责制的事业单位中党的基层组织，对重大问题进行讨论和作出决定，同时保证行政领导人充分行使自己的职权。</p>
<p>　　各级党和国家机关中党的基层组织，协助行政负责人完成任务，改进工作，对包括行政负责人在内的每个党员进行监督，不领导本单位的业务工作。</p>
<h1 id="第六章-党的干部"><a href="#第六章-党的干部" class="headerlink" title="第六章　党的干部"></a>第六章　党的干部</h1><p>　　第三十三条　党的干部是党的事业的骨干，是人民的公仆。党按照德才兼备、以德为先的原则选拔干部，坚持五湖四海、任人唯贤，反对任人唯亲，努力实现干部队伍的革命化、年轻化、知识化、专业化。</p>
<p>　　党重视教育、培训、选拔、考核和监督干部，特别是培养、选拔优秀年轻干部。积极推进干部制度改革。</p>
<p>　　党重视培养、选拔女干部和少数民族干部。</p>
<p>　　第三十四条　党的各级领导干部必须模范地履行本章程第三条所规定的党员的各项义务，并且必须具备以下的基本条件：</p>
<p>　　（一）具有履行职责所需要的马克思列宁主义、毛泽东思想、邓小平理论的水平，认真实践“三个代表”重要思想，带头贯彻落实科学发展观，努力用马克思主义的立场、观点、方法分析和解决实际问题，坚持讲学习、讲政治、讲正气，经得起各种风浪的考验。</p>
<p>　　（二）具有共产主义远大理想和中国特色社会主义坚定信念，坚决执行党的基本路线和各项方针、政策，立志改革开放，献身现代化事业，在社会主义建设中艰苦创业，树立正确政绩观，做出经得起实践、人民、历史检验的实绩。</p>
<p>　　（三）坚持解放思想，实事求是，与时俱进，开拓创新，认真调查研究，能够把党的方针、政策同本地区、本部门的实际相结合，卓有成效地开展工作，讲实话，办实事，求实效，反对形式主义。</p>
<p>　　（四）有强烈的革命事业心和政治责任感，有实践经验，有胜任领导工作的组织能力、文化水平和专业知识。</p>
<p>　　（五）正确行使人民赋予的权力，坚持原则，依法办事，清正廉洁，勤政为民，以身作则，艰苦朴素，密切联系群众，坚持党的群众路线，自觉地接受党和群众的批评和监督，加强道德修养，讲党性、重品行、作表率，做到自重、自省、自警、自励，反对官僚主义，反对任何滥用职权、谋求私利的不正之风。</p>
<p>　　（六）坚持和维护党的民主集中制，有民主作风，有全局观念，善于团结同志，包括团结同自己有不同意见的同志一道工作。</p>
<p>　　第三十五条　党员干部要善于同党外干部合作共事，尊重他们，虚心学习他们的长处。</p>
<p>　　党的各级组织要善于发现和推荐有真才实学的党外干部担任领导工作，保证他们有职有权，充分发挥他们的作用。</p>
<p>　　第三十六条　党的各级领导干部，无论是由民主选举产生的，或是由领导机关任命的，他们的职务都不是终身的，都可以变动或解除。</p>
<p>　　年龄和健康状况不适宜于继续担任工作的干部，应当按照国家的规定退、离休。</p>
<h1 id="第七章-党的纪律"><a href="#第七章-党的纪律" class="headerlink" title="第七章　党的纪律"></a>第七章　党的纪律</h1><p>　　第三十七条　党的纪律是党的各级组织和全体党员必须遵守的行为规则，是维护党的团结统一、完成党的任务的保证。党组织必须严格执行和维护党的纪律，共产党员必须自觉接受党的纪律的约束。</p>
<p>　　第三十八条　党组织对违犯党的纪律的党员，应当本着惩前毖后、治病救人的精神，按照错误性质和情节轻重，给以批评教育直至纪律处分。</p>
<p>　　严重触犯刑律的党员必须开除党籍。</p>
<p>　　党内严格禁止用违反党章和国家法律的手段对待党员，严格禁止打击报复和诬告陷害。违反这些规定的组织或个人必须受到党的纪律和国家法律的追究。</p>
<p>　　第三十九条　党的纪律处分有五种：警告、严重警告、撤销党内职务、留党察看、开除党籍。</p>
<p>　　留党察看最长不超过两年。党员在留党察看期间没有表决权、选举权和被选举权。党员经过留党察看，确已改正错误的，应当恢复其党员的权利；坚持错误不改的，应当开除党籍。</p>
<p>　　开除党籍是党内的最高处分。各级党组织在决定或批准开除党员党籍的时候，应当全面研究有关的材料和意见，采取十分慎重的态度。</p>
<p>　　第四十条　对党员的纪律处分，必须经过支部大会讨论决定，报党的基层委员会批准；如果涉及的问题比较重要或复杂，或给党员以开除党籍的处分，应分别不同情况，报县级或县级以上党的纪律检查委员会审查批准。在特殊情况下，县级和县级以上各级党的委员会和纪律检查委员会有权直接决定给党员以纪律处分。</p>
<p>　　对党的中央委员会和地方各级委员会的委员、候补委员，给以撤销党内职务、留党察看或开除党籍的处分，必须由本人所在的委员会全体会议三分之二以上的多数决定。在特殊情况下，可以先由中央政治局和地方各级委员会常务委员会作出处理决定，待召开委员会全体会议时予以追认。对地方各级委员会委员和候补委员的上述处分，必须经过上级党的委员会批准。</p>
<p>　　严重触犯刑律的中央委员会委员、候补委员，由中央政治局决定开除其党籍；严重触犯刑律的地方各级委员会委员、候补委员，由同级委员会常务委员会决定开除其党籍。</p>
<p>　　第四十一条　党组织对党员作出处分决定，应当实事求是地查清事实。处分决定所依据的事实材料和处分决定必须同本人见面，听取本人说明情况和申辩。如果本人对处分决定不服，可以提出申诉，有关党组织必须负责处理或者迅速转递，不得扣压。对于确属坚持错误意见和无理要求的人，要给以批评教育。</p>
<p>　　第四十二条　党组织如果在维护党的纪律方面失职，必须受到追究。</p>
<p>　　对于严重违犯党的纪律、本身又不能纠正的党组织，上一级党的委员会在查明核实后，应根据情节严重的程度，作出进行改组或予以解散的决定，并报再上一级党的委员会审查批准，正式宣布执行。</p>
<h1 id="第八章-党的纪律检查机关"><a href="#第八章-党的纪律检查机关" class="headerlink" title="第八章　党的纪律检查机关"></a>第八章　党的纪律检查机关</h1><p>　　第四十三条　党的中央纪律检查委员会在党的中央委员会领导下进行工作。党的地方各级纪律检查委员会和基层纪律检查委员会在同级党的委员会和上级纪律检查委员会双重领导下进行工作。</p>
<p>　　党的各级纪律检查委员会每届任期和同级党的委员会相同。</p>
<p>　　党的中央纪律检查委员会全体会议，选举常务委员会和书记、副书记，并报党的中央委员会批准。党的地方各级纪律检查委员会全体会议，选举常务委员会和书记、副书记，并由同级党的委员会通过，报上级党的委员会批准。党的基层委员会是设立纪律检查委员会，还是设立纪律检查委员，由它的上一级党组织根据具体情况决定。党的总支部委员会和支部委员会设纪律检查委员。</p>
<p>　　党的中央纪律检查委员会根据工作需要，可以向中央一级党和国家机关派驻党的纪律检查组或纪律检查员。纪律检查组组长或纪律检查员可以列席该机关党的领导组织的有关会议。他们的工作必须受到该机关党的领导组织的支持。</p>
<p>　　第四十四条　党的各级纪律检查委员会的主要任务是：维护党的章程和其他党内法规，检查党的路线、方针、政策和决议的执行情况，协助党的委员会加强党风建设和组织协调反腐败工作。</p>
<p>　　各级纪律检查委员会要经常对党员进行遵守纪律的教育，作出关于维护党纪的决定；对党员领导干部行使权力进行监督；检查和处理党的组织和党员违反党的章程和其他党内法规的比较重要或复杂的案件，决定或取消对这些案件中的党员的处分；受理党员的控告和申诉；保障党员的权利。</p>
<p>　　各级纪律检查委员会要把处理特别重要或复杂的案件中的问题和处理的结果，向同级党的委员会报告。党的地方各级纪律检查委员会和基层纪律检查委员会要同时向上级纪律检查委员会报告。</p>
<p>　　各级纪律检查委员会发现同级党的委员会委员有违犯党的纪律的行为，可以先进行初步核实，如果需要立案检查的，应当报同级党的委员会批准，涉及常务委员的，经报告同级党的委员会后报上一级纪律检查委员会批准。</p>
<p>　　第四十五条　上级纪律检查委员会有权检查下级纪律检查委员会的工作，并且有权批准和改变下级纪律检查委员会对于案件所作的决定。如果所要改变的该下级纪律检查委员会的决定，已经得到它的同级党的委员会的批准，这种改变必须经过它的上一级党的委员会批准。</p>
<p>　　党的地方各级纪律检查委员会和基层纪律检查委员会如果对同级党的委员会处理案件的决定有不同意见，可以请求上一级纪律检查委员会予以复查；如果发现同级党的委员会或它的成员有违犯党的纪律的情况，在同级党的委员会不给予解决或不给予正确解决的时候，有权向上级纪律检查委员会提出申诉，请求协助处理。</p>
<h1 id="第九章-党组"><a href="#第九章-党组" class="headerlink" title="第九章　党组"></a>第九章　党组</h1><p>　　第四十六条　在中央和地方国家机关、人民团体、经济组织、文化组织和其他非党组织的领导机关中，可以成立党组。党组发挥领导核心作用。党组的任务，主要是负责贯彻执行党的路线、方针、政策；讨论和决定本单位的重大问题；做好干部管理工作；团结党外干部和群众，完成党和国家交给的任务；指导机关和直属单位党组织的工作。</p>
<p>　　第四十七条　党组的成员，由批准成立党组的党组织决定。党组设书记，必要时还可以设副书记。</p>
<p>　　党组必须服从批准它成立的党组织领导。</p>
<p>　　第四十八条　对下属单位实行集中统一领导的国家工作部门可以建立党委，党委的产生办法、职权和工作任务，由中央另行规定。</p>
<p>第十章　党和共产主义青年团的关系</p>
<p>　　第四十九条　中国共产主义青年团是中国共产党领导的先进青年的群众组织，是广大青年在实践中学习中国特色社会主义和共产主义的学校，是党的助手和后备军。共青团中央委员会受党中央委员会领导。共青团的地方各级组织受同级党的委员会领导，同时受共青团上级组织领导。</p>
<p>　　第五十条　党的各级委员会要加强对共青团的领导，注意团的干部的选拔和培训。党要坚决支持共青团根据广大青年的特点和需要，生动活泼地、富于创造性地进行工作，充分发挥团的突击队作用和联系广大青年的桥梁作用。</p>
<p>　　团的县级和县级以下各级委员会书记，企业事业单位的团委员会书记，是党员的，可以列席同级党的委员会和常务委员会的会议。</p>
<p>第十一章　党徽党旗</p>
<p>　　第五十一条　中国共产党党徽为镰刀和锤头组成的图案。</p>
<p>　　第五十二条　中国共产党党旗为旗面缀有金黄色党徽图案的红旗。</p>
<p>　　第五十三条　中国共产党的党徽党旗是中国共产党的象征和标志。党的各级组织和每一个党员都要维护党徽党旗的尊严。要按照规定制作和使用党徽党旗。</p>
<p>   （中国共产党第十八次全国代表大会部分修改，2012年11月14日通过）</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[一些数据结构的基本操作]]></title>
      <url>http://gosnail.me/2016/06/06/basic-operation/</url>
      <content type="html"><![CDATA[<p>在实现一个具体算法时，除了整体的设计思路外，还需要对一些数据结构的基本操作熟记于心。这样才容易将心里的想法更快地变成代码。</p>
<h1 id="链表-linked-list"><a href="#链表-linked-list" class="headerlink" title="链表(linked list)"></a>链表(linked list)</h1><h2 id="插入结点"><a href="#插入结点" class="headerlink" title="插入结点"></a>插入结点</h2><p>将newnode插入到cur结点之后<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">next = cur.next</span><br><span class="line">cur.next = newnode</span><br><span class="line">newnode.next = next</span><br></pre></td></tr></table></figure></p>
<h2 id="删除节点"><a href="#删除节点" class="headerlink" title="删除节点"></a>删除节点</h2><p>删除cur结点之后的结点<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> cur.next != <span class="keyword">None</span>:</span><br><span class="line">    cur.next = cur.next.next</span><br></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[解算法题的常用方法]]></title>
      <url>http://gosnail.me/2016/06/06/algorithm-summary/</url>
      <content type="html"><![CDATA[<h1 id="常用的分解子问题的方式"><a href="#常用的分解子问题的方式" class="headerlink" title="常用的分解子问题的方式"></a>常用的分解子问题的方式</h1><h2 id="n-1-1"><a href="#n-1-1" class="headerlink" title="(n-1) + 1"></a>(n-1) + 1</h2><p>先得到前n-1个元素的问题的解，再构造新加一个元素后的解。使用这种办法的典型算法为<strong>insert sort</strong> 。<br>针对二叉树，就是先分别求在两棵子树上的解，然后再构造原树的解。</p>
<p>这是一种从后向前，缩减问题规模的方式。</p>
<p>leetcode题库中，能使用该方法解决的题有:</p>
<ul>
<li><a href="https://leetcode.com/problems/reverse-string/" target="_blank" rel="external">344. Reverse String</a><br>  先翻转前n-1字符,结果记为res，然后把第n个字符插在res的前面</li>
<li><a href="https://leetcode.com/problems/counting-bits/" target="_blank" rel="external">338. Counting Bits</a><br>  分别求每个数m的二进制表示中1的个数。<br>  这里把输入m看作是n个bit的list。先计算前n-1个bit中1的个数(不妨设为cnt)，如果第n个bit是1，则原问题的解为cnt+1，否则为cnt</li>
<li><a href="https://leetcode.com/problems/maximum-depth-of-binary-tree/" target="_blank" rel="external">104. Maximum Depth of Binary Tree</a><br>  先分别计算左子树和右子树的深度，原树深度为其两棵子树的深度的最大值加1。</li>
<li><a href="https://leetcode.com/problems/invert-binary-tree/" target="_blank" rel="external">226. Invert Binary Tree</a><br>  先分别翻转左子树和右子树，然后把翻转后的右子树作为其左子树，把翻转后的左子树作为其右子树。</li>
<li><a href="https://leetcode.com/problems/move-zeroes/" target="_blank" rel="external">283. Move Zeroes</a><br>  先将前n-1个元素中的数字移动到正确的位置。用i记录前n-1个元素中第一个0的index。如果第n个元素为0, 则结束。否则，将第n个元素拷贝到第i个位置。</li>
<li><a href="https://leetcode.com/problems/same-tree/" target="_blank" rel="external">100. Same Tree</a><br>  先看两棵子树的左子树和右子树是否分别相等，是的话，再看两棵树的根的值是否相等，是的话，两棵树相等。否则，不相等。</li>
<li><a href="https://leetcode.com/problems/product-of-array-except-self/" target="_blank" rel="external">238. Product of Array Except Self</a><br>  先求出前n-1个元素的结果,不妨记为res，然后将结果中的每个元素乘以第n个元素。得到了前n-1个元素的最终结果。第n个元素的结果为res[n-1]乘以第n-1个数。</li>
<li><a href="https://leetcode.com/problems/reverse-linked-list/" target="_blank" rel="external">206. Reverse Linked List</a><br>  先将前后n-1个元素的list逆序,得到的结果记为resList，然后把第1个元素连接到resList的末尾。注意要记录逆序后的list的表头和表尾。</li>
<li><a href="https://leetcode.com/problems/odd-even-linked-list/" target="_blank" rel="external">328. Odd Even Linked List</a><br>  先将后n-2个元素的list按照要求重新排列，再将前两个元素插入到该list中</li>
<li><a href="https://leetcode.com/problems/house-robber-iii/" target="_blank" rel="external">337. House Robber III</a><br>  先求两课子树分别在抢根结点和不抢根结点情况下的最大获益。原树的最大获益分为两种情况：1) 抢劫根结点，获益为两棵子树在不抢根结点情况下的最大获益。2) 不抢劫根结点，获益为两棵子树获益的最大和。取两种情况下的最大值。</li>
<li><a href="https://leetcode.com/problems/climbing-stairs/" target="_blank" rel="external">70. Climbing Stairs</a><br>  走n步到达终点的方法数为，走1步然后再走n-1步的方法数，加上走2步然后再走n-2步的方法数.</li>
<li><a href="https://leetcode.com/problems/gray-code/" target="_blank" rel="external">89. Gray Code</a><br>  n位的格雷码按照以下方法由n-1位的格雷码构造：<ul>
<li>前一半的格雷码为n-1位的格雷码最高位添加0</li>
<li>后一半的格雷码为n-1位的格雷码逆序后，最高位添加1</li>
</ul>
</li>
<li><a href="https://leetcode.com/problems/maximum-subarray/" target="_blank" rel="external">53. Maximum Subarray</a><br>  先把原问题加强，求以第i个元素结尾的子序列的最大和。假设以第i-1个元素结尾的子序列的最大和为s(i-1), 那么以第i个元素结尾的子序列的最大和分两种情况:1) 如果s(i-1) &lt; 0, 则为第i个元素 2) 否则，为s(i-1)加上第i个元素的值。</li>
<li><a href="https://leetcode.com/problems/unique-paths/" target="_blank" rel="external">62. Unique Paths</a><br>  从坐标(i,j)到达(m,n)的方法数为从(i+1,j)到(m,n)的方法数加上从(i,j+1)到(m,n)的方法数。这里问题的规模为表格的大小。</li>
<li><a href="https://leetcode.com/problems/combination-sum-iii/" target="_blank" rel="external">216. Combination Sum III</a><br>  这里问题的规模可以认为是可选数值的个数。求和为n的k个数，有两种方案 1) 取可选数值的第1个数(不妨设为s)，然后从剩下的数中选取k-1数使其和n-s； 2) 不选可选数值的第1个数，然后从剩下的数中选取k个数使其和为n。</li>
<li><a href="https://leetcode.com/problems/permutations/" target="_blank" rel="external">46. Permutations</a><br>  先确定排列中第一位的数值，然后再拼接上剩下元素的排列即可。</li>
<li><a href="https://leetcode.com/problems/binary-tree-postorder-traversal/" target="_blank" rel="external">145. Binary Tree Postorder Traversal</a><br>  先遍历左右子树，再遍历根结点。</li>
<li><a href="https://leetcode.com/problems/swap-nodes-in-pairs/" target="_blank" rel="external">24. Swap Nodes in Pairs</a><br>  先将后n-2个结点完成交换，再把前两个结点交换后，插入到链头</li>
<li><a href="https://leetcode.com/problems/minimum-path-sum/" target="_blank" rel="external">64. Minimum Path Sum</a><br>  从坐标(i,j)到达(m,n)的最短路径为从(i+1,j)到(m,n)的最短路径与从(i,j+1)到(m,n)的最短路径中的最小值，再加上自己的权值。这里问题的规模为表格的大小。</li>
<li><a href="https://leetcode.com/problems/super-ugly-number/" target="_blank" rel="external">313. Super Ugly Number</a><br>  先得到前n-1个ugly number, 第n个ugly number是前n-1个ugly number分别乘以各个素数值中的最小值。</li>
<li><a href="https://leetcode.com/problems/sort-colors/" target="_blank" rel="external">75. Sort Colors</a><br>  先将前n-1个元素调整好顺序，同时记录调整后的序列中第一个不是0的位置i和第一个不是2的位置j:<ul>
<li>假如第n个数是0，则按照如下方法调整序列， 将位置i的值放到位置j，将位置j的元素放到位置n, 最后将位置n的值放到位置i.  i和j都加1</li>
<li>假如第n个数是1，则按照如下方法调整序列， 将位置j的元素放到位置n, 最后将位置n的值放到位置j. j加1</li>
<li>假如第n个数是2，不调整</li>
</ul>
</li>
<li><a href="https://leetcode.com/problems/binary-tree-level-order-traversal-ii/" target="_blank" rel="external">107. Binary Tree Level Order Traversal II</a><br> 先计算出左子树和右子树的层序遍历结果。然后将之合并。然后将根结点加入。注意，左子树和右子树返回的结果中，第一个元素为最后一层，最后一个元素为其根。</li>
<li><a href="https://leetcode.com/problems/balanced-binary-tree/" target="_blank" rel="external">110. Balanced Binary Tree</a><br> 当前树为平衡树，要满足以下几点：1) 左右子树均为平衡树 2) 左右子树的高度差至多为1. 所以， 要计算每棵子树的高度。</li>
<li><a href="https://leetcode.com/problems/symmetric-tree/" target="_blank" rel="external">101. Symmetric Tree</a><br>  将原问题加强为判断两棵树是否对称。两棵树t1和t2要对称需要满足：1) t1和t2的根结点的值相等，2) t1的左子树和t2的右子树对称，t1的右子树和t2的左子树对称</li>
<li><a href="https://leetcode.com/problems/pascals-triangle/" target="_blank" rel="external">118. Pascal’s Triangle</a><br> 第n行的Pascal三角由第n-1行构造。构造方式如下：<code>P[n][i]=P[n-1][i-1]+P[n-1][i]</code>, 其中，<code>0&lt;i&lt;n</code></li>
<li><a href="https://leetcode.com/problems/binary-tree-level-order-traversal/" target="_blank" rel="external">102. Binary Tree Level Order Traversal</a><br> 先计算出左子树和右子树的层序遍历结果。然后将之合并。然后将根结点加入。注意，左子树和右子树返回的结果中，第一个元素为根，最后一个元素为最后一层。</li>
<li><a href="https://leetcode.com/problems/sum-root-to-leaf-numbers/" target="_blank" rel="external">129. Sum Root to Leaf Numbers</a><br> 将问题转化为求树中所有root到leaf的路径</li>
<li><a href="https://leetcode.com/problems/pascals-triangle-ii/" target="_blank" rel="external">119. Pascal’s Triangle II</a><br> 与<a href="https://leetcode.com/problems/pascals-triangle/" target="_blank" rel="external">118. Pascal’s Triangle</a> 类似，可以从第k行的值得到第k+1行的值。</li>
</ul>
<h2 id="1-n-1"><a href="#1-n-1" class="headerlink" title="1 + (n-1)"></a>1 + (n-1)</h2><p>先从原问题中排除掉一个元素，然后求解剩下n-1个元素问题的解。最后，再构造原问题的解。使用这种方法的典型算法为<strong>bubble sort</strong> 。</p>
<p>这里缩减问题规模的方式，很特殊，是找到一个特殊的元素，将其减去。</p>
<p>使用这种方法的典型算法为贪心算法。通常，尾递归算法可以归为这一类。</p>
<p>还有一种情况，可以归为这一类。就是，根据第一个元素，分情况讨论。</p>
<h3 id="贪心算法"><a href="#贪心算法" class="headerlink" title="贪心算法"></a>贪心算法</h3><p>贪心算法通常选择最值为要去除的那个元素。</p>
<p>leetcode题库中，能使用该方法解决的题有:</p>
<h3 id="根据第一个元素，分情况讨论："><a href="#根据第一个元素，分情况讨论：" class="headerlink" title="根据第一个元素，分情况讨论："></a>根据第一个元素，分情况讨论：</h3><p>leetcode题库中，能使用该方法解决的题有:</p>
<ul>
<li><a href="https://leetcode.com/problems/house-robber/" target="_blank" rel="external">198. House Robber</a><br>  如果抢第一家，则只能抢第二家之后的n-2家。如果，不抢第一家，则可以抢第一家之后的n-1家，选择这两种情况的最大值即可。</li>
<li><a href="https://leetcode.com/problems/combinations/" target="_blank" rel="external">77. Combinations</a><br>  如果选取第一个元素，则从剩下的n-1个元素中选k-1个就可以了。如果不选取第一个元素，则从剩下的n-1个元素选择k个元素。</li>
</ul>
<h3 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h3><p>leetcode题库中，能使用该方法解决的题有:</p>
<ul>
<li><a href="https://leetcode.com/problems/delete-node-in-a-linked-list/" target="_blank" rel="external">237. Delete Node in a Linked List</a></li>
<li><a href="https://leetcode.com/problems/number-of-1-bits/" target="_blank" rel="external">191. Number of 1 Bits</a><br>先看第一个结点，如果它是要删除的结点，删除之，否则从剩下的链表中删除指定结点。</li>
<li><a href="https://leetcode.com/problems/spiral-matrix-ii/" target="_blank" rel="external">59. Spiral Matrix II</a><br>把spiral的圈数作为问题的规模。可以，先求解最外圈的数值，然后递归求解剩下的矩阵。</li>
<li><a href="https://leetcode.com/problems/rotate-image/" target="_blank" rel="external">48. Rotate Image</a><br>把矩阵的圈数作为问题的规模。可以，先旋转最外层，再递归求解剩下的矩阵。</li>
</ul>
<h2 id="n-2-n-2"><a href="#n-2-n-2" class="headerlink" title="(n/2) + (n/2)"></a>(n/2) + (n/2)</h2><p>先分别求解前n/2个元素和后n/2个元素问题的解, 然后再构造原问题的解。使用这种方法的典型算法为 <strong>merge sort</strong> 。</p>
<p>leetcode题库中，能使用该方法解决的题有:</p>
<ul>
<li><a href="https://leetcode.com/problems/counting-bits/" target="_blank" rel="external">338. Counting Bits</a><br>  分别求每个数m的二进制表示中1的个数。<br>  这里把输入m看作是n个bit的list。分别计算前n/2和后n/2个bit中1的个数，然后将两者相加即可。</li>
</ul>
<h2 id="1-n-1-2-n-2-…-n-1-1"><a href="#1-n-1-2-n-2-…-n-1-1" class="headerlink" title="1+(n-1), 2+(n-2), …, (n-1)+1"></a>1+(n-1), 2+(n-2), …, (n-1)+1</h2><p>先将原问题分别分为1+(n-1),…,(n-1)+1这几种情况，然后根据问题描述综合得到原问题的解。其实，这里的基本想法还是分治</p>
<p>leetcode题库中，能使用该方法解决的题有:</p>
<ul>
<li><a href="https://leetcode.com/problems/unique-binary-search-trees/" target="_blank" rel="external">96. Unique Binary Search Trees</a><br> 规模为n的树的形态数，为其左右子树结点数分别为(0,n-1),…,(n-1,0)时树的形态数的和。</li>
<li><a href="https://leetcode.com/problems/generate-parentheses/" target="_blank" rel="external">22. Generate Parentheses</a><br> n对括号，可以由以下方式构成：<ul>
<li>i对括号连接n-i对括号，其中 1&lt;=i&lt;=n</li>
<li>n-1对括号的外层加一对括号</li>
</ul>
</li>
<li><a href="https://leetcode.com/problems/burst-balloons/" target="_blank" rel="external">312. Burst Balloons</a><br>把这道题归在这里，其实不是很合适。因为，想到分割原问题的方式是很难的。</li>
<li><a href="https://leetcode.com/problems/different-ways-to-add-parentheses/" target="_blank" rel="external">241. Different Ways to Add Parentheses</a><br>这里的规模n为字符串中含的符号数。然后，分别从每个符号的位置将原字符串一分为二，递归求解即可。</li>
</ul>
<h2 id="forall-k-lt-n-–-gt-n"><a href="#forall-k-lt-n-–-gt-n" class="headerlink" title="forall k &lt; n –&gt; n"></a>forall k &lt; n –&gt; n</h2><p>leetcode题库中，能使用该方法解决的题有:</p>
<ul>
<li><a href="https://leetcode.com/problems/longest-increasing-subsequence/" target="_blank" rel="external">300. Longest Increasing Subsequence</a><br>  可以先将问题加强为，求以第n个元素结尾的最长上升子序列。它是前n-1个元素中比第n个元素小的元素，其最长上升子序列，中的最大值加1.</li>
</ul>
<h1 id="二分查找"><a href="#二分查找" class="headerlink" title="二分查找"></a>二分查找</h1><p>二分查找其实是<code>(n/2)+(n/2)</code>问题的一种特例。因为数据的有序性质，而使得原问题的解直接归结为前一半问题或后一半问题的解。从而消除了回溯。</p>
<p>leetcode题库中，能使用该方法解决的题有:</p>
<ul>
<li><a href="https://leetcode.com/problems/search-insert-position/" target="_blank" rel="external">35. Search Insert Position</a></li>
<li><a href="https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-search-tree/" target="_blank" rel="external">235. Lowest Common Ancestor of a Binary Search Tree</a></li>
<li><a href="https://leetcode.com/problems/find-minimum-in-rotated-sorted-array/" target="_blank" rel="external">153. Find Minimum in Rotated Sorted Array</a></li>
</ul>
<h1 id="遍历"><a href="#遍历" class="headerlink" title="遍历"></a>遍历</h1><p>遍历是把问题的求解过程变成了判断过程。当解空间有限时，我们可以枚举解空间的任意一个值，再判断该值是否为原问题的解。常见的遍历(枚举)方法为 <em>深度优先</em> 和 <em>广度优先</em> ,以避免枚举过程中的重复问题。针对线性的数据结构， <em>线性遍历遍历</em> 就可以了。</p>
<h2 id="线性遍历"><a href="#线性遍历" class="headerlink" title="线性遍历"></a>线性遍历</h2><p>leetcode题库中，能使用该方法解决的题有:</p>
<ul>
<li><a href="https://leetcode.com/problems/single-number/" target="_blank" rel="external">136. Single Number</a></li>
<li><a href="https://leetcode.com/problems/intersection-of-two-arrays/" target="_blank" rel="external">349. Intersection of Two Arrays</a></li>
<li><a href="https://leetcode.com/problems/single-number-iii/" target="_blank" rel="external">260. Single Number III</a></li>
<li><a href="https://leetcode.com/problems/delete-node-in-a-linked-list/" target="_blank" rel="external">237. Delete Node in a Linked List</a></li>
<li><a href="https://leetcode.com/problems/valid-anagram/" target="_blank" rel="external">242. Valid Anagram</a></li>
<li><a href="https://leetcode.com/problems/majority-element/" target="_blank" rel="external">169. Majority Element</a></li>
<li><a href="https://leetcode.com/problems/contains-duplicate/" target="_blank" rel="external">217. Contains Duplicate</a></li>
<li><a href="https://leetcode.com/problems/missing-number/" target="_blank" rel="external">268. Missing Number</a></li>
<li><a href="https://leetcode.com/problems/maximum-product-of-word-lengths/" target="_blank" rel="external">318. Maximum Product of Word Lengths</a></li>
<li><a href="https://leetcode.com/problems/power-of-three/" target="_blank" rel="external">326. Power of Three</a><br>检查是否存在一个k, 使得3^k=n</li>
<li><a href="https://leetcode.com/problems/remove-duplicates-from-sorted-list/" target="_blank" rel="external">83. Remove Duplicates from Sorted List</a>  </li>
<li><a href="https://leetcode.com/problems/linked-list-cycle/" target="_blank" rel="external">141. Linked List Cycle</a></li>
<li><a href="https://leetcode.com/problems/game-of-life/" target="_blank" rel="external">289. Game of Life</a></li>
<li><a href="https://leetcode.com/problems/remove-element/" target="_blank" rel="external">Remove Element</a></li>
<li><a href="https://leetcode.com/problems/remove-duplicates-from-sorted-array/" target="_blank" rel="external">26. Remove Duplicates from Sorted Array</a></li>
<li><a href="https://leetcode.com/problems/set-matrix-zeroes/" target="_blank" rel="external">73. Set Matrix Zeroes</a><br> 可以用第0行和第0列来记录被置为0的行和列</li>
</ul>
<h2 id="深度优先"><a href="#深度优先" class="headerlink" title="深度优先"></a>深度优先</h2><h3 id="先序遍历"><a href="#先序遍历" class="headerlink" title="先序遍历"></a>先序遍历</h3><p>leetcode题库中，能使用该方法解决的题有:</p>
<ul>
<li><a href="https://leetcode.com/problems/kth-smallest-element-in-a-bst/" target="_blank" rel="external">230. Kth Smallest Element in a BST</a></li>
<li><a href="https://leetcode.com/problems/binary-search-tree-iterator/" target="_blank" rel="external">173. Binary Search Tree Iterator</a><h3 id="中序遍历"><a href="#中序遍历" class="headerlink" title="中序遍历"></a>中序遍历</h3><h3 id="后序遍历"><a href="#后序遍历" class="headerlink" title="后序遍历"></a>后序遍历</h3></li>
</ul>
<h2 id="广度优先"><a href="#广度优先" class="headerlink" title="广度优先"></a>广度优先</h2><p>树的层序遍历，图中寻找最短路径多使用广度优先。</p>
<p>树的层序遍历要注意如何判断一层的元素已经全被遍历完了。有两种方法：</p>
<ul>
<li>记录一层的元素个数，该数值为上一层元素的孩子数。 在开始遍历一层的时候，已经遍历了几个元素。当遍历的个数达到该层的元素个数时，该层遍历结束。</li>
<li>设置一个queue，只保存当前正在遍历的层的所有元素。当该queue中所有元素被遍历完时，该层就被遍历完了。</li>
</ul>
<p>当所有问题为求最短路径时，可以试着使用广度优先。</p>
<p>leetcode题库中，能使用该方法解决的题有:</p>
<ul>
<li><a href="https://leetcode.com/problems/populating-next-right-pointers-in-each-node/" target="_blank" rel="external">116. Populating Next Right Pointers in Each Node</a></li>
<li><a href="https://leetcode.com/problems/binary-tree-right-side-view/" target="_blank" rel="external">199. Binary Tree Right Side View</a></li>
<li><p><a href="https://leetcode.com/problems/perfect-squares/" target="_blank" rel="external">279. Perfect Squares</a><br> 搜索树为</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">  1           4          9 ....</span><br><span class="line">1 4 9 ...   1 4 9 ...  1 4 9 ...</span><br></pre></td></tr></table></figure>
</li>
<li><p><a href="https://leetcode.com/problems/populating-next-right-pointers-in-each-node-ii/" target="_blank" rel="external">117. Populating Next Right Pointers in Each Node II</a>   </p>
</li>
</ul>
<h1 id="回溯-backtrace"><a href="#回溯-backtrace" class="headerlink" title="回溯(backtrace)"></a>回溯(backtrace)</h1><p>有时，我们无需将解空间全部遍历一遍。当我们知道解空间中的一个值不是原问题的解时，我们可以知道其它的一些值也一定不是解。这时候，就用到了回溯。比方说，解空间的值为 <strong>*(a1,…,an)</strong> , 当 <strong>ai</strong> 等于某值(不妨设为 <strong>v</strong> )时, 对于任意的 <strong>a(i+1) … an</strong> , <strong>(v1, …,v(i-1), v, a(i+1), … ,an)</strong> 都不是原问题的解，则无需再遍历这些解。回溯的策略是，依次遍历 <strong>ai</strong> 的值。 将遍历解空间的值变为了遍历解空间中各个维度的值。一个典型算法为 <strong>八皇后问题</strong> 。 回溯可以看作是带剪枝的遍历。</p>
<p>leetcode题库中，能使用该方法解决的题有:</p>
<ul>
<li><a href="https://leetcode.com/problems/n-queens-ii/" target="_blank" rel="external">52. N-Queens II</a><br> 依次确定第i行的皇后的位置。当第i的某个位置不能放皇后时，第i行后的其它行也不必遍历了。</li>
</ul>
<h1 id="动态规划-dynamic-programming"><a href="#动态规划-dynamic-programming" class="headerlink" title="动态规划(dynamic programming)"></a>动态规划(dynamic programming)</h1><p>不太明白动态规划原本的含义是什么。我只把它看作是一种优化手段，当发现重复计算时，便将计算结果存下来。</p>
<p>leetcode题库中，能使用该方法解决的题有:</p>
<ul>
<li><a href="https://leetcode.com/problems/counting-bits/" target="_blank" rel="external">338. Counting Bits</a></li>
<li><a href="https://leetcode.com/problems/unique-binary-search-trees/" target="_blank" rel="external">96. Unique Binary Search Trees</a></li>
<li><a href="https://leetcode.com/problems/climbing-stairs/" target="_blank" rel="external">70. Climbing Stairs</a></li>
</ul>
<h1 id="一些特殊方法"><a href="#一些特殊方法" class="headerlink" title="一些特殊方法"></a>一些特殊方法</h1><p>使用上述的方法，通常能找到一个多项式时间的算法。但是，如果希望得到更低时间复杂度的算法，就需要进行一些细致的观察了。利用原有数据中的一些特殊性质。在这里列出的方法一般没法直接拿来用。就直接当作题库吧。遇到过就会，没有遇到过，还是算了吧。</p>
<h2 id="Two-Pointers"><a href="#Two-Pointers" class="headerlink" title="Two Pointers"></a>Two Pointers</h2><p>该方法缩减问题规模的方式可以从前后两个方向开始缩减。到底从哪边缩减，因具体情况而定。该方法常用于有序数组上的一些问题。使用这个办法的典型算法为 <strong>quick sort</strong> 中的 <strong>partition</strong>。如果原问题本身有一种前后的对称性，也可以考虑使用该办法。</p>
<p>leetcode题库中，能使用该方法解决的题有:</p>
<ul>
<li><a href="https://leetcode.com/problems/reverse-string/" target="_blank" rel="external">344 Reverse String</a><br>基于这样的观察：将字符串反转，是先将首尾两个字母调换，然后剩下的字符串翻转。</li>
<li><a href="https://leetcode.com/problems/reverse-vowels-of-a-string/" target="_blank" rel="external">345. Reverse Vowels of a String</a><br>算法和上一道题一致。</li>
<li><a href="https://leetcode.com/problems/sort-colors/" target="_blank" rel="external">75. Sort Colors</a><br>从两头开始遍历数组，左侧保证全是0，右侧保证全是1和2，且所有的1都在2的前面。</li>
</ul>
<h2 id="Partition"><a href="#Partition" class="headerlink" title="Partition"></a>Partition</h2><p>leetcode题库中，能使用该方法解决的题有:</p>
<ul>
<li><a href="https://leetcode.com/problems/kth-largest-element-in-an-array/" target="_blank" rel="external">215. Kth Largest Element in an Array</a></li>
</ul>
<h2 id="位运算"><a href="#位运算" class="headerlink" title="位运算"></a>位运算</h2><p>这种题，千变万化，目前没有找到规律。</p>
<p>leetcode题库中，能使用该方法解决的题有:</p>
<ul>
<li><a href="https://leetcode.com/problems/counting-bits/" target="_blank" rel="external">338. Counting Bits</a></li>
<li><a href="https://leetcode.com/problems/single-number/" target="_blank" rel="external">136. Single Number</a></li>
<li><a href="https://leetcode.com/problems/single-number-iii/" target="_blank" rel="external">260. Single Number III</a></li>
<li><a href="https://leetcode.com/problems/single-number-ii/" target="_blank" rel="external">137. Single Number II</a></li>
<li><a href="https://leetcode.com/problems/number-of-1-bits/" target="_blank" rel="external">191. Number of 1 Bits</a></li>
<li><a href="https://leetcode.com/problems/power-of-two/" target="_blank" rel="external">231. Power of Two</a><br>low bit</li>
<li><a href="https://leetcode.com/problems/power-of-four/" target="_blank" rel="external">342. Power of Four</a><br>一个数是4的幂次，则它的二进制表示中只有一位为1，且这个1在奇数位上。</li>
</ul>
<h2 id="其它的一些技巧"><a href="#其它的一些技巧" class="headerlink" title="其它的一些技巧"></a>其它的一些技巧</h2><p>记录某个字母c出现的次数，可以用数组来存储。num[ord(c)-ord(‘a’)]记录c出现的次数。如果知道要遍历的数值的范围，也可以这么做。</p>
<ul>
<li><a href="https://leetcode.com/problems/valid-anagram/" target="_blank" rel="external">242. Valid Anagram</a></li>
<li><a href="https://leetcode.com/problems/missing-number/" target="_blank" rel="external">268. Missing Number</a></li>
</ul>
<p>记录某个元素出现的次数，或记录某个元素是否出现过，可以使用HashTable，查找时间复杂度为O(1)</p>
<ul>
<li><a href="https://leetcode.com/problems/contains-duplicate/" target="_blank" rel="external">217. Contains Duplicate</a></li>
</ul>
<p>记录某个字母(都是小写字母或都是大写字母)是否出现过, 可以用一个int数的各个bit来记录。</p>
<ul>
<li><a href="https://leetcode.com/problems/maximum-product-of-word-lengths/" target="_blank" rel="external">318. Maximum Product of Word Lengths</a></li>
</ul>
<p>将数组化身为链表</p>
<ul>
<li><a href="https://leetcode.com/problems/find-the-duplicate-number/" target="_blank" rel="external">287. Find the Duplicate Number</a><br>  和操作系统中存储页的freelist方式相似。</li>
</ul>
<p>关于数组的问题，看看先排序后，是否能有更好的算法。</p>
<p>加入一个int类型变量的取值范围为0或者1，那么可以使用该变量除了最低位的其它位来存储别的值。</p>
<ul>
<li><a href="https://leetcode.com/problems/game-of-life/" target="_blank" rel="external">289. Game of Life</a></li>
</ul>
<h1 id="其它-1"><a href="#其它-1" class="headerlink" title="其它"></a>其它</h1><p>有一些习题的算法无法用上面的办法想到，或者有一些习题的一些算法无法用上面的办法想到。这里列出了这些习题。</p>
<h2 id="math"><a href="#math" class="headerlink" title="math"></a>math</h2><ul>
<li><a href="https://leetcode.com/problems/add-digits/" target="_blank" rel="external">258. Add Digits</a></li>
<li><a href="https://leetcode.com/problems/excel-sheet-column-number/" target="_blank" rel="external">171. Excel Sheet Column Number</a><br>将26进制数转化为10进制数。</li>
<li><a href="https://leetcode.com/problems/ugly-number/" target="_blank" rel="external">263. Ugly Number</a></li>
<li><a href="https://leetcode.com/problems/happy-number/" target="_blank" rel="external">202. Happy Number</a></li>
<li><a href="https://leetcode.com/problems/power-of-four/" target="_blank" rel="external">342. Power of Four</a><br>一个数是4的幂次，则它的二进制表示中只有一位为1，且这个1在奇数位上。</li>
<li><a href="https://leetcode.com/problems/factorial-trailing-zeroes/" target="_blank" rel="external">172. Factorial Trailing Zeroes</a><br> 乘积末尾中0的个数，取决于乘数中5及5的幂次的个数。</li>
</ul>
<h2 id="天才的想法"><a href="#天才的想法" class="headerlink" title="天才的想法"></a>天才的想法</h2><p>天才的想法总来自于那灵光一闪的一刻。我们很难探究这些想法的来源。只要安静地欣赏就好了。</p>
<h3 id="投票"><a href="#投票" class="headerlink" title="投票"></a>投票</h3><p>It is proposed in “A fast majority vote algorithm”[^vote].<br>It is proved formally in “Experiences with software specification and verification using LP, the Larch proof assistant”[^voteproof]</p>
<ul>
<li><a href="https://leetcode.com/problems/majority-element/" target="_blank" rel="external">169. Majority Element</a><h3 id="寻找环"><a href="#寻找环" class="headerlink" title="寻找环"></a>寻找环</h3>It is proposed by Floyd.</li>
</ul>
<ul>
<li><a href="https://leetcode.com/problems/linked-list-cycle/" target="_blank" rel="external">141. Linked List Cycle</a></li>
<li><a href="https://leetcode.com/problems/linked-list-cycle-ii/" target="_blank" rel="external">142. Linked List Cycle II</a></li>
<li><a href="https://leetcode.com/problems/find-the-duplicate-number/" target="_blank" rel="external">287. Find the Duplicate Number</a>  </li>
</ul>
<h2 id="其它-2"><a href="#其它-2" class="headerlink" title="其它"></a>其它</h2><h3 id="简单题"><a href="#简单题" class="headerlink" title="简单题"></a>简单题</h3><ul>
<li><a href="https://leetcode.com/problems/plus-one/" target="_blank" rel="external">66. Plus One</a></li>
<li><a href="https://leetcode.com/problems/peeking-iterator/" target="_blank" rel="external">284. Peeking Iterator</a><br>将peek()返回的值缓存起来。</li>
</ul>
<h3 id="其它-3"><a href="#其它-3" class="headerlink" title="其它"></a>其它</h3><ul>
<li><a href="https://leetcode.com/problems/nim-game/" target="_blank" rel="external">Nim Game</a></li>
<li><a href="https://leetcode.com/problems/product-of-array-except-self/" target="_blank" rel="external">238. Product of Array Except Self</a></li>
<li><a href="https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii/" target="_blank" rel="external">122. Best Time to Buy and Sell Stock II</a></li>
<li><a href="https://leetcode.com/problems/top-k-frequent-elements/" target="_blank" rel="external">347. Top K Frequent Elements</a></li>
<li><a href="https://leetcode.com/problems/binary-tree-preorder-traversal/" target="_blank" rel="external">144. Binary Tree Preorder Traversal</a></li>
<li><a href="https://leetcode.com/problems/binary-tree-inorder-traversal/" target="_blank" rel="external">94. Binary Tree Inorder Traversal</a></li>
<li><a href="https://leetcode.com/problems/roman-to-integer/" target="_blank" rel="external">13. Roman to Integer</a></li>
<li><a href="https://leetcode.com/problems/integer-to-roman/" target="_blank" rel="external">12. Integer to Roman</a></li>
<li><a href="https://leetcode.com/problems/burst-balloons/" target="_blank" rel="external">312. Burst Balloons</a><br>解这道题，用了一个巧妙的想法，就是从最后一个爆炸的气球开始考虑。具体分析见<a href="https://leetcode.com/discuss/72216/share-some-analysis-and-explanations" target="_blank" rel="external">Share some analysis and explanations</a><br>据说，这种逆向思考，是在dp问题中的常见想法。</li>
<li><a href="https://leetcode.com/problems/best-time-to-buy-and-sell-stock/" target="_blank" rel="external">121. Best Time to Buy and Sell Stock</a><br>可以赚到所有的利润，即所有当天价格比前一天价格高的价格差。  </li>
<li><a href="https://leetcode.com/problems/merge-two-sorted-lists/" target="_blank" rel="external">21. Merge Two Sorted Lists</a>  </li>
<li><a href="https://leetcode.com/problems/binary-tree-postorder-traversal/" target="_blank" rel="external">145. Binary Tree Postorder Traversal</a><br>非递归算法</li>
<li><a href="https://leetcode.com/problems/merge-two-sorted-lists/" target="_blank" rel="external">21. Merge Two Sorted Lists</a><br>采用merge_sort中merge的想法即可。</li>
<li><a href="https://leetcode.com/problems/data-stream-as-disjoint-intervals/" target="_blank" rel="external">352. Data Stream as Disjoint Intervals</a>  </li>
<li><a href="https://leetcode.com/problems/super-ugly-number/" target="_blank" rel="external">313. Super Ugly Number</a><br>  这道题的一个精巧解法是利用了merge的想法。</li>
<li><a href="https://leetcode.com/problems/container-with-most-water/" target="_blank" rel="external">11. Container With Most Water</a><br>  虽然，这道题可以使用Two pointer的办法解决，但是怎么能够想到使用Two pointer的办法，以及如何使用，却不清楚。</li>
<li><a href="https://leetcode.com/problems/search-a-2d-matrix-ii/" target="_blank" rel="external">240. Search a 2D Matrix II</a>    </li>
<li><a href="https://leetcode.com/problems/longest-increasing-subsequence/" target="_blank" rel="external">300. Longest Increasing Subsequence</a><br>  这个算法的nlg(n)解法, 不知道怎么想出来的。</li>
<li><a href="https://leetcode.com/problems/find-minimum-in-rotated-sorted-array-ii/" target="_blank" rel="external">154. Find Minimum in Rotated Sorted Array II</a><br> 这个题，不好直接用二分法求解。</li>
<li><a href="https://leetcode.com/problems/increasing-triplet-subsequence/" target="_blank" rel="external">334. Increasing Triple Subsequence</a><br>  想想，在遍历前n-1个元素时收集到什么的信息时，就可以判断加了第n个元素是否有解。</li>
<li><a href="https://leetcode.com/problems/search-a-2d-matrix/" target="_blank" rel="external">74. Search a 2D Matrix</a>    </li>
<li><a href="https://leetcode.com/problems/implement-queue-using-stacks/" target="_blank" rel="external">232. Implement Queue using Stacks</a><br>用两个堆栈来模拟队列。</li>
<li><a href="https://leetcode.com/problems/remove-duplicates-from-sorted-array-ii/" target="_blank" rel="external">80. Remove Duplicates from Sorted Array II</a><br>使得一个排好序的数组中，一个元素至多只重复一次，则只需要检查p[n]和p[n-2]是否相等。</li>
<li><a href="https://leetcode.com/problems/find-peak-element/" target="_blank" rel="external">162. Find Peak Element</a><br>虽然，该方法的框架为二分查找，但是更重要的是要发现一个性质：peak总是在数值在增加的一侧。而且，根据的题目的限制(num[i] != nums[i+1]及num[-1]和num[n]均为负无穷)，一定存在一个peak。</li>
<li><a href="https://leetcode.com/problems/find-k-pairs-with-smallest-sums/" target="_blank" rel="external">373. Find K Pairs with Smallest Sums</a><br>一个最直接的方法是直接排序。但是这个算法并没有利用输入是有序的这个性质。根据有序性质，我们可以把两个有序数组的pair组成一棵树（更确切的是一个图，其实是一个格）。在树中，祖先结点的和总是比后代结点的和小。从而，我们可以使用广度优先算法来遍历。</li>
<li><a href="https://leetcode.com/problems/remove-duplicate-letters/" target="_blank" rel="external">316. Remove Duplicate Letters</a><br>这道题虽然被标记为了贪心算法，而且其中的一个解法确实也符合贪心算法的框架。可是，我采用贪心算法的想法，怎么也没想出一个算法来。那个贪心算法，基于以下观察：<ul>
<li>假设s[i:]是包含所有字母的最短后缀,即s[i]是s[i:]中的唯一字母，c是s[0:i]中的最小字母，则c的最终位置一定在[0,i)中，且其它字母的最终位置一定在[i,n)中。</li>
<li>更通俗的讲，一个字母c选择的位置要满足:<ul>
<li>c前面的字母z都要比c小，除非z在c后面没有出现过。所谓贪心的过程，就是选择满足这个条件的第一个元素。</li>
</ul>
</li>
</ul>
</li>
</ul>
<hr>
<p>update:</p>
<p>2016-7-13 </p>
<p>随着做的题越来越多，越来越发现，想找几种通用的pattern来帮助你更快地解题，变得越来越困难。比方说，我总觉得首先寻找分割子问题的方式，可能是着手解题的一个好的开始。可是，越来越多的题表明，这么做并没有什么用。在正文中<strong>其他</strong>条目中，题目的不断增加，便越来越说明了这一点。</p>
<p>或许，回归直觉，是一个好的办法。从一个给定输入出发，看看自己能够找到一个求解问题的办法。从中，看看能否发现一些规律，然后推广到别的输入。也就是，波利亚在《数学与猜想》中提到的，从特殊到一般。</p>
<p>或者，换一个思路去思考问题。不是从问题本身的结构出发，而是从描述问题所使用的数据结构出发，或许有好的思路。比如说，输入是一个有序数组，输入是两个有序数组，会让你有更好地解决办法。总结一下，描述问题所用的数据结构可以利用的一些性质，或许有帮助。一个典型的题目是<a href="https://leetcode.com/problems/find-k-pairs-with-smallest-sums/" target="_blank" rel="external">Find K Pairs with Smallest Sums</a>，由两个有序数组的元素组成的pair可以构成一棵树，树的性质为如果m是n的祖先，则它们有序。然后，便容易有了这个题目的广度优先遍历算法。</p>
<h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p>[^vote]: Robert S. Boyer and J. Strother Moore. MJRTY: A fast majority vote algorithm. In Automated Reasoning: Essays in Honor of Woody Bledsoe, pages 105–118. Kluwer, 1991.</p>
<p>[^voteproof]: Manfred Broy. Experiences with software specification and verification using LP, the Larch proof assistant. Formal Methods in System Design, 8(3):221–272, 1996.</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[multi-hop ssh]]></title>
      <url>http://gosnail.me/2016/06/05/multi-hop-ssh/</url>
      <content type="html"><![CDATA[<p>假如你希望借助于机器 <strong>broker</strong> 来访问机器 <strong>target</strong>, 可以在<code>~/.ssh/config</code>文件中添加如下内容</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Host broker             # Machine B definition (the broker)</span><br><span class="line">    Hostname broker-ip  # Change this IP address to the address of the broker</span><br><span class="line">    User myusername     # Change this default user accordingly </span><br><span class="line">                        # (`user@unibroker` can overwrite it)</span><br><span class="line"></span><br><span class="line">Host target             # Machine A definition (the target host)</span><br><span class="line">    ProxyCommand ssh -q broker nc hostname.or.IP.address.target.machine 22</span><br></pre></td></tr></table></figure>
<p>然后使用<code>ssh username@target</code>即可访问目标机器 <em>target</em></p>
<p>当需要多级跳转时，在<code>~/.ssh/config</code>中添加如下内容即可。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Host ruapehu</span><br><span class="line">  HostName ruapehu.example.com</span><br><span class="line"></span><br><span class="line">Host aoraki</span><br><span class="line">  ProxyCommand ssh ruapehu nc aoraki 22</span><br><span class="line"></span><br><span class="line">Host tongariro</span><br><span class="line">  ProxyCommand ssh aoraki nc %h 22</span><br></pre></td></tr></table></figure>
<p>当使用命令<code>ssh aoraki</code>时，你其实是经过如下路径访问到了 <strong>tongariro</strong>: <strong>ruapehu</strong> –&gt; <strong>aoraki</strong> –&gt; <strong>tongariro</strong></p>
<h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><ul>
<li><a href="http://ssg.ustcsz.edu.cn/~jhr/wordpress/" target="_blank" rel="external">multi-hop ssh</a></li>
<li><a href="http://sshmenu.sourceforge.net/articles/transparent-mulithop.html" target="_blank" rel="external">Transparent Multi-hop SSH</a></li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[排序算法]]></title>
      <url>http://gosnail.me/2016/06/03/sort/</url>
      <content type="html"><![CDATA[<h1 id="Merge-Sort"><a href="#Merge-Sort" class="headerlink" title="Merge Sort"></a>Merge Sort</h1><p>Merge sort是典型的分治算法, 直接将原问题分为前一半和后一半。要使用分治算法，原问题必须能够分解为规模相当，且能够独立求解的两个子问题。Merge sort的算法框架可以套用在其它的分治算法上，只要把<strong>merge</strong>函数重写即可。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">merge_sort</span><span class="params">(nums)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> merge_sort_helper(nums, <span class="number">0</span>, len(nums)<span class="number">-1</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">merge_sort_helper</span><span class="params">(nums, start, end)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> start == end:</span><br><span class="line">        <span class="keyword">return</span> [nums[start]]</span><br><span class="line">        </span><br><span class="line">    mid = start + (end-start)/<span class="number">2</span></span><br><span class="line">    res1 = merge_sort_helper(nums, start, mid)</span><br><span class="line">    res2 = merge_sort_helper(nums, mid+<span class="number">1</span>, end)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> merge(res1, res2)</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">merge</span><span class="params">(nums1, nums2)</span>:</span></span><br><span class="line">    i = <span class="number">0</span></span><br><span class="line">    j = <span class="number">0</span></span><br><span class="line">    res = []</span><br><span class="line">    <span class="keyword">while</span> i &lt; len(nums1) <span class="keyword">and</span> j &lt; len(nums2):</span><br><span class="line">        <span class="keyword">if</span> nums1[i] &lt;= nums2[j]:</span><br><span class="line">            res.append(nums1[i])</span><br><span class="line">            i += <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            res.append(nums2[j])</span><br><span class="line">            j += <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> i &lt; len(nums1):</span><br><span class="line">        res.append(nums1[i])</span><br><span class="line">        i += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> j &lt; len(nums2):</span><br><span class="line">        res.append(nums2[j])</span><br><span class="line">        j += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure>
<p>Merge sort中的<strong>merge</strong>的办法可以应用到很多问题中。如</p>
<ul>
<li><a href="https://leetcode.com/problems/merge-two-sorted-lists/" target="_blank" rel="external">Merge Two Sorted Lists</a></li>
<li><a href="https://leetcode.com/problems/merge-k-sorted-lists/" target="_blank" rel="external">Merge k Sorted Lists</a></li>
</ul>
<p>也是就是说，合并两个有序的线性结构，可以使用该merge算法。那如果是两个有序的二叉树呢(如 二分查找树)？可以这么来做。先通过该merge算法得到一个排好序的数组(时间复杂度为O(m+n))，然后再由该有序数组生成二分查找树(时间复杂度为O(m+n))。其中，m和n分别为两棵树的节点数。当然了，如果该二分查找树的表示方式为数组的话，那直接merge就完成了。</p>
<h1 id="Quick-Sort"><a href="#Quick-Sort" class="headerlink" title="Quick Sort"></a>Quick Sort</h1><p>Quick Sort也是分治算法。只是它分割子问题的方式相对巧妙一些。相比于merge sort,它不是直接将原数组分为前一半和后一半，而是随机选取一个元素，将原数组分为比这个元素大的一半和不比这个元素大的一半。它的好处是，把两个子问题的结果直接合并就是原问题的解。</p>
<p>我们还可以换一个角度来看这个排序的过程。当你把原数组分割好的时候，其实你也找到了那个分割元素在数组中的位置。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">quick_sort</span><span class="params">(nums)</span>:</span></span><br><span class="line">    quick_sort_helper(nums, <span class="number">0</span>, len(nums)<span class="number">-1</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">quick_sort_helper</span><span class="params">(nums, start, end)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> start &lt; end:</span><br><span class="line">        r = partition(nums, start, end)</span><br><span class="line">        quick_sort_helper(nums, start, r<span class="number">-1</span>)</span><br><span class="line">        quick_sort_helper(nums, r+<span class="number">1</span>, end)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">partition</span><span class="params">(nums, start, end)</span>:</span></span><br><span class="line">    pivot = nums[end]</span><br><span class="line">    i = start</span><br><span class="line">    j = end</span><br><span class="line">    <span class="keyword">while</span> i &lt; j:</span><br><span class="line">        <span class="keyword">while</span>  i&lt;j <span class="keyword">and</span> nums[i] &lt;= pivot:</span><br><span class="line">            i += <span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> i&lt;j <span class="keyword">and</span> nums[j] &gt;= pivot:</span><br><span class="line">            j -= <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> i &lt; j:</span><br><span class="line">            nums[i], nums[j] = nums[j], nums[i]</span><br><span class="line">            i += <span class="number">1</span></span><br><span class="line">            j -= <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    tmp = nums[i]</span><br><span class="line">    nums[i] = nums[end]</span><br><span class="line">    nums[end] = tmp</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> i</span><br></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[安装hexo]]></title>
      <url>http://gosnail.me/2016/06/03/%E5%AE%89%E8%A3%85hexo/</url>
      <content type="html"><![CDATA[<h1 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h1><ul>
<li><a href="https://hexo.io/docs/index.html" target="_blank" rel="external">installation from hexo.io document</a></li>
<li><a href="https://hexo.io/docs/setup.html" target="_blank" rel="external">setup from hexo.io document</a></li>
</ul>
<h1 id="安装和使用中碰到的问题"><a href="#安装和使用中碰到的问题" class="headerlink" title="安装和使用中碰到的问题"></a>安装和使用中碰到的问题</h1><h2 id="没有hexo-server命令"><a href="#没有hexo-server命令" class="headerlink" title="没有hexo server命令"></a>没有hexo server命令</h2><p>原因是hexo-server模块作为一个独立的模块，需要单独安装</p>
<pre><code>npm install hexo-server --save
</code></pre><p>详见<a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server section of hexo.io document</a></p>
<h2 id="运行Hexo-server命令后，访问4000端口出现cannot-get"><a href="#运行Hexo-server命令后，访问4000端口出现cannot-get" class="headerlink" title="运行Hexo server命令后，访问4000端口出现cannot get?"></a>运行Hexo server命令后，访问4000端口出现cannot get?</h2><p>查看public目录，发现没有index文件</p>
<pre><code>ls /blog/public/
</code></pre><p>原因是hexo有些依赖的模块没有安装，从而没有正确的生成网站。完成安装即可。<br>在你的blog目录下运行</p>
<pre><code>npm install
</code></pre><p>详见<a href="http://www.zhihu.com/question/35964327" target="_blank" rel="external">Hexo本地安装 都是默认的文件 命令运行了 访问4000端口出现cannot get?</a></p>
<h2 id="hexo的next主题显示德语"><a href="#hexo的next主题显示德语" class="headerlink" title="hexo的next主题显示德语"></a>hexo的next主题显示德语</h2><p>原因不明。将blog/themes/next/languages/de.yml删除了，这样会显示默认语言，也就是英文。</p>
<h1 id="hexo的主题"><a href="#hexo的主题" class="headerlink" title="hexo的主题"></a>hexo的主题</h1><h2 id="next"><a href="#next" class="headerlink" title="next"></a>next</h2><ul>
<li><a href="http://theme-next.iissnan.com/" target="_blank" rel="external">介绍</a></li>
<li><a href="http://theme-next.iissnan.com/getting-started.html" target="_blank" rel="external">安装</a></li>
<li>一些配置<ul>
<li><a href="http://theme-next.iissnan.com/theme-settings.html#tags-page" target="_blank" rel="external">添加「标签」页面</a></li>
<li><a href="http://theme-next.iissnan.com/theme-settings.html#categories-page" target="_blank" rel="external">添加「分类」页面</a></li>
<li><a href="http://theme-next.iissnan.com/third-party-services.html#local-search" target="_blank" rel="external">Local Search</a></li>
<li><a href="http://theme-next.iissnan.com/third-party-services.html#mathjax" target="_blank" rel="external">MathJax</a></li>
</ul>
</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>http://gosnail.me/2016/06/03/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    </entry>
    
  
  
</search>
